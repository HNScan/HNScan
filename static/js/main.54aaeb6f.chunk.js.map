{"version":3,"sources":["components/shared/ScrollToTop.js","containers/SearchBar.js","components/svg/Logo.js","components/layout/Navigation.js","components/Link.js","components/svg/LogoText.js","components/layout/Footer.js","components/layout/ContentContainer.js","components/shared/StackedData.js","utils/util.js","components/address/AddressSummary.js","components/address/AddressSkeleton.js","components/shared/PutsList.js","containers/TransactionList.js","screens/Address.js","components/block/BlockSummary.js","components/block/BlockAdvanced.js","screens/Block.js","components/block/BlocksTable.js","screens/Blocks.js","components/home/NetworkSummary.js","components/svg/RightArrow.js","components/home/RecentTransactions.js","components/svg/Block.js","components/home/RecentBlocks.js","screens/Home.js","components/name/NameSummary.js","components/name/NameAdvanced.js","components/name/NameHistory.js","screens/errors/NameError.js","screens/Name.js","components/name/NamesTable.js","screens/Names.js","screens/Search.js","hooks/useNetwork.js","components/shared/NetworkSwitcher.js","screens/Settings.js","screens/Transaction.js","screens/tools/AirdropClaim/AirdropClaimScreen.jsx","screens/tools/NodeStatus.js","hooks/useRoutedModal.js","containers/charts/DailyTransactions.js","containers/charts/DailyOpens.js","containers/charts/DailyBids.js","containers/charts/TotalSupply.js","containers/charts/TotalTransactions.js","containers/charts/TotalBurned.js","containers/charts/TotalLocked.js","screens/tools/Charts.js","containers/charts/DailyDifficulty.js","screens/tools/ChartDetail.js","screens/Changelog.js","screens/errors/NotFound.js","screens/errors/NetworkBoundary.js","i18n/i18n.js","components/App.js","index.js"],"names":["ScrollToTop","useLocation","pathname","search","useEffect","window","scrollTo","IconWrapper","styled","span","Icon","SearchIcon","SearchWrapper","form","SearchInput","input","SearchBar","props","useState","query","setQuery","history","useHistory","t","useTranslation","e","a","preventDefault","length","fetch","process","result","toggleNav","json","data","push","url","className","onSubmit","type","placeholder","maxLength","value","onChange","target","color","theme","light","dark","Logo","width","height","viewBox","stroke","strokeWidth","fill","fillRule","d","strokeLinecap","NavLinkItem","NavBar","Item","breakpoint","upToDesktop","Link","Burger","div","LogoWrapper","Navigation","mobileNav","updateMobileNav","moreDropdownActive","updateMoreDropdownActive","toolsDropdownActive","updateToolsDropdownActive","Container","Brand","as","to","active","onClick","Menu","Start","hoverable","dropdown","Dropdown","stopPropagation","href","rel","End","RouterLink","LogoText","SubText","CogWrapper","FooterContainer","ContentContainer","LeftContent","Tagline","Header","FooterLink","ContactItem","RightContent","LeftLinksContainer","RightLinksContainer","LinksContainer","SubTextContainer","Footer","desktop","CellWrapper","Table","Td","DivWrapper","Value","cell","Label","StackedBody","label","link","StackedData","exponentScales","val","name","abbreviation","exponent","formatLargeNumber","n","decimalPlaces","i","item","fraction","Decimal","toDecimalPlaces","hnsValues","amount","stringAmount","x","parts","toString","split","replace","join","numberWithCommas","truncateHash","hash","len","firstHalf","substring","secondHalf","num","timeAgo","timestamp","humanizeDuration","Date","now","largest","round","sciNotation","places","arr","sign","Math","coefficient","abs","isLarge","floor","toSciNotation","toFixed","AddressWrapper","AddressHash","Code","tablet","AddressTitle","SkeletonWrapper","AddressSummary","received","spent","confirmed","small","copy","title","mobile","AddressSkeleton","Title","DataContainer","PutsWrapper","InputList","inputs","map","index","key","coinbase","i18nKey","values","airdrop","address","renderInput","count","OutputList","outputs","output","action","renderOutputAction","HashWrapper","TransactionList","page","from","offset","limit","useQuery","pages","ceil","total","renderTransactions","tx","tx_id","collapse","totalPages","AddressView","fallback","Address","usePage","useParams","BlockSummarySkeleton","params","BlockSummary","block","skeleton","time","num_tx","fees","mined_by","weight","confirmations","BlockAdvanced","difficulty","closed","Body","previous_hash","Tr","version","bits","size","nonce","extra_nonce","next_hash","merkle_root","witness_root","tree_root","reserved_root","mask","chainwork","BlockSkeleton","BlockContainer","px","Block","Row","miner","txs","loading","onlyMobile","BlocksTableStructure","children","Head","Th","BlocksSkeleton","rows","BlocksTable","blocks","blockRows","BlocksView","pageOffset","Blocks","NetworkSummary","info","hashrate","unconfirmed","memSize","unconfirmed_size","network","parseInt","chain_work","registeredNames","registered_names","Arrow","transform","points","ArrowIcon","Time","Flex","Transaction","columns","fee","RecentTransactions","header","icon","actionTitle","txRows","BlockIcon","BlockLogo","BlockCardItem","tx_num","bold","RecentBlocks","headerAction","HorizontalContainer","VerticalContainer","IndividualCardContainer","HomeView","summary","Home","timeToNextState","today","timeLeft","getTime","fromNow","NameSummary","release","reserved","state","blocksUntil","nextState","renewal","highest","weak","transfer","revoked","NameHistory","changePage","names","Center","NameError","hasError","error","errorInfo","this","align","justify","React","Component","NameRecords","NameView","nameData","records","Name","NamesTableStructure","NamesSkeleton","NamesTable","nameRows","NamesView","Names","h1","SearchResultsTable","table","SearchBarWrapper","Search","location","results","useNetwork","usePersistedState","NetworkSwitcher","setNetwork","options","defaultValue","find","element","kv","reload","SmallText","Text","supportedOptions","SettingsInput","description","margin","Settings","i18n","useLocalStorage","setLang","updateLanguage","changeLanguage","TxWrapper","TxTitle","TxHash","TxDetailScreen","locktime","TxDetail","AirdropClaimScreen","confirmForm","document","getElementById","proofstring","successMessage","svg","console","log","xhr","XMLHttpRequest","FormData","append","onreadystatechange","readyState","status","style","display","classList","add","open","send","submitForm","addressInputControl","remove","JSON","parse","responseText","proof","innerHTML","htmlFor","readOnly","checked","id","submitClaim","confirmClaim","disabled","xmlns","cx","cy","r","Help","HelpIcon","ConnectHelp","show","showModal","closeFunction","toggleModal","ip","idkey","shell","NodeStatusContainer","urlHash","setModal","useRoutedModal","totalDownloaded","totalBytesRecv","totalUploaded","totalBytesSent","host","port","circle","progress","agent","connections","uptime","NodeStatus","DailyTransactions","startTime","endTime","axisLabels","chartLabel","dataLabels","DailyOpens","DailyBids","TotalSupply","yFormatter","el","TotalTransactions","TotalBurned","TotalLocked","ChartsWrapper","CustomCol","Col","InteractonBlocker","Charts","DailyDifficulty","CustomCard","Card","PoweredBy","Graph","fullHeight","exact","path","component","Changelog","Wrapper","Subtext","Container404","HugeBlock","NotFoundScreen","NetworkSwitcherWrapper","NetworkBoundary","resources","en","zh","use","LanguageDetector","initReactI18next","init","debug","fallbackLng","interpolation","escapeValue","App","useTheme","StrictMode","config","ChartDetail","ReactDOM","render"],"mappings":"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","file":"static/js/main.54aaeb6f.chunk.js","sourcesContent":["import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname, search } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname, search]);\n\n  return null;\n}\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport theme from \"styled-theming\";\n\nimport { SearchIcon } from \"@urkellabs/ucl\";\n\nconst IconWrapper = styled.span`\n  left: 0;\n  height: 2.25em;\n  pointer-events: none;\n  position: absolute;\n  top: 0;\n  width: 2.25em;\n  z-index: 4;\n  align-items: center;\n  display: inline-flex;\n  justify-content: center;\n`;\n\nconst Icon = styled(SearchIcon)`\n  height: 1rem;\n  width: 1rem;\n  fill: #dbdbdb;\n`;\n\nconst SearchWrapper = styled.form`\n  clear: both;\n  font-size: 1rem;\n  position: relative;\n  text-align: left;\n`;\n\n// const background = theme(\"mode\", {\n//   light: \"#fff\",\n//   dark: \"#575757\"\n// });\n\n// const backgroundActive = theme(\"mode\", {\n//   light: \"#fbfbfb\",\n//   dark: \"#505050\"\n// });\n\n// const borderColor = theme(\"mode\", {\n//   light: \"#e7e7e7\",\n//   dark: \"#444\"\n// });\n\n// const textColor = theme(\"mode\", {\n//   light: \"#4a4a4a\",\n//   dark: \"#afafaf\"\n// });\n\n// const lightTextColor = theme(\"mode\", {\n//   light: \"#dbdbdb\",\n//   dark: \"#969696\"\n// });\n\nconst SearchInput = styled.input`\n  width: 350px;\n  border-width: 1.25px;\n  padding-left: 55px;\n  -webkit-appearance: none;\n\n  // Bulma Style Overrides\n  background: #fff;\n  border: 1px solid #e7e7e7;\n  color: #4a4a4a;\n\n  //Bulma helper\n  border-radius: 290486px;\n  padding-right: 1em;\n\n  //Bulma\n  box-shadow: inset 0 1px 2px rgba(10, 10, 10, 0.1);\n  max-width: 100%;\n  align-items: center;\n  display: inline-flex;\n  font-size: 1rem;\n  height: 2.25em;\n  justify-content: flex-start;\n  line-height: 1.5;\n  padding-bottom: calc(0.375em - 1px);\n  padding-top: calc(0.375em - 1px);\n  outline: none;\n  position: relative;\n  vertical-align: top;\n\n  &:focus {\n    box-shadow: none !important;\n    background: #fbfbfb;\n  }\n  &::placeholder {\n    color: #dbdbdb;\n  }\n`;\n\nconst SearchBar = props => {\n  const [query, setQuery] = useState(\"\");\n  const history = useHistory();\n  const { t } = useTranslation();\n\n  //Search API Call\n  // @todo we should add some validation interaction for searches that fail\n  const search = async e => {\n    e.preventDefault();\n    if (!query.length) return;\n\n    //@todo convert this to useQuery\n    let result = await fetch(\n      `${process.env.REACT_APP_API_URL}/search?q=${query}`\n    );\n\n    // Close the nav on successful search (if in mobile)\n    props.toggleNav(false);\n\n    let data = await result.json();\n\n    //If we only get 1 result back, then navigate straight to that page.\n    if (data.length === 1) {\n      history.push({ pathname: data[0].url });\n      setQuery(\"\");\n      //If more than 1 result is returned,\n      //we navigate to the Search page to display the results.\n    } else {\n      history.push({ pathname: \"/search\", search: `?q=${query}` }, data);\n      setQuery(\"\");\n    }\n  };\n  return (\n    <SearchWrapper className=\"control has-icons-left\" onSubmit={search}>\n      <SearchInput\n        type=\"search\"\n        placeholder={t(\"search.placeholder\")}\n        maxLength=\"64\"\n        value={query}\n        onChange={e => setQuery(e.target.value)}\n      />\n      <IconWrapper>\n        <Icon />\n      </IconWrapper>\n    </SearchWrapper>\n  );\n};\n\nexport default SearchBar;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport theme from \"styled-theming\";\n\nconst color = theme(\"mode\", {\n  light: \"#4a4a4a\",\n  dark: \"#afafaf\"\n});\n\nconst Logo = styled(HnsScan)`\n  fill: ${color};\n  stroke: ${color};\n`;\n\nfunction HnsScan(props) {\n  return (\n    <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 554 407\">\n      <title>HNScan Logo</title>\n      <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n        <g>\n          <path\n            {...props}\n            d=\"M139.474416,270 L141.695809,270 C166.188793,320.321233 217.817742,355 277.546352,355 C337.274961,355 388.903911,320.321233 413.396889,270.00001 L415.618288,270 C390.975449,321.459854 338.411323,357 277.546352,357 C216.68138,357 164.117254,321.459854 139.47442,270.000009 Z M139.000004,138.999992 C163.437983,87.0011407 216.287909,51 277.546352,51 C338.804795,51 391.654721,87.0011407 416.0927,138.999992 L413.879068,139 C389.58615,88.1387753 337.669801,53 277.546352,53 C217.422902,53 165.506553,88.1387753 141.213639,138.999991 L139,139 Z\"\n            stroke=\"#000000\"\n            strokeWidth=\"4\"\n            fill=\"#000000\"\n            fillRule=\"nonzero\"\n          ></path>\n          <path\n            {...props}\n            d=\"M180.676863,270 L183.11055,270 C203.912904,299.631801 238.343541,319 277.297863,319 C316.252184,319 350.682821,299.631801 371.485175,270 L373.918862,270 C352.843629,300.79382 317.430449,321 277.297863,321 C237.165276,321 201.752096,300.79382 180.676863,270 Z M180,139 C200.988795,107.644371 236.732453,87 277.297863,87 C317.863272,87 353.60693,107.644371 374.595725,139 L372.179351,139 C351.4539,108.804704 316.6887,89 277.297863,89 C237.907025,89 203.141825,108.804704 182.416374,139 L180,139 Z\"\n            stroke=\"#000000\"\n            strokeWidth=\"4\"\n            fill=\"#000000\"\n            fillRule=\"nonzero\"\n          ></path>\n          <path\n            {...props}\n            d=\"M85,269 L106.264342,269 C132.637592,337.998297 199.4609,387 277.729169,387 C355.997437,387 422.820745,337.998297 449.193982,269.000002 L470.458337,269 C443.191552,349.255355 367.203852,407 277.729169,407 C188.254485,407 112.266785,349.255355 85.0000066,269.000001 Z M85.0000066,137.999999 C112.266785,57.7446451 188.254485,0 277.729169,0 C367.203852,0 443.191552,57.7446451 470.458331,137.999999 L449.193995,138 C422.820745,69.0017028 355.997437,20 277.729169,20 C199.4609,20 132.637592,69.0017028 106.264355,137.999998 L85,138 Z\"\n            fill=\"#000000\"\n            fillRule=\"nonzero\"\n          ></path>\n          <path\n            {...props}\n            d=\"M355.5,75.512442 L358.220987,75.512442 L355.59312,71.1544279 L353,75.512442 L355.5,75.512442 L358,75.512442 L355.40688,71.1544279 L352.779013,75.512442 L355.5,75.512442 Z M355.396212,76.8255727 L358,72.5074915 L353,72.5074915 L355.603788,76.8255727 L358.173147,72.5074915 L352.826853,72.5074915 L355.396212,76.8255727 Z M368,81.1985865 L355.5,88.6363767 L343,81.1985865 L343,66.8601079 L355.5,59.3226506 L368,66.8601079 L368,81.1985865 Z\"\n            stroke=\"#000000\"\n            strokeWidth=\"8\"\n            fill=\"#000000\"\n            fillRule=\"nonzero\"\n          ></path>\n          <path\n            {...props}\n            d=\"M192.5,330.512442 L195.220987,330.512442 L192.59312,326.154428 L190,330.512442 L195,330.512442 L192.40688,326.154428 L189.779013,330.512442 L192.5,330.512442 Z M192.396212,331.825573 L195,327.507491 L190,327.507491 L192.603788,331.825573 L195.173147,327.507491 L189.826853,327.507491 L192.396212,331.825573 Z M205,336.198586 L192.5,343.636377 L180,336.198586 L180,321.860108 L192.5,314.322651 L205,321.860108 L205,336.198586 Z\"\n            stroke=\"#000000\"\n            strokeWidth=\"8\"\n            fill=\"#000000\"\n            fillRule=\"nonzero\"\n          ></path>\n          <path\n            {...props}\n            d=\"M277.5,8 L277.5,88\"\n            stroke=\"#000000\"\n            strokeWidth=\"6\"\n            strokeLinecap=\"square\"\n          ></path>\n          <path\n            {...props}\n            d=\"M276.5,322 L276.5,402\"\n            stroke=\"#000000\"\n            strokeWidth=\"6\"\n            strokeLinecap=\"square\"\n          ></path>\n          <path\n            {...props}\n            d=\"M66.93,161.5 L81.305,161.5 L81.305,242 L66.93,242 L66.93,205.085 L15.18,205.085 L15.18,242 L0.805,242 L0.805,161.5 L15.18,161.5 L15.18,190.71 L66.93,190.71 L66.93,161.5 Z M163.93,161.5 L178.305,161.615 L178.305,242.115 L163.93,231.075 L112.18,191.17 L112.18,242.115 L97.805,242.115 L97.805,161.845 L112.18,172.885 L163.93,212.79 L163.93,161.5 Z M270.935,183.695 L256.56,183.81 L256.56,183.35 C256.56,179.325 253.225,175.99 249.2,175.99 L216.54,175.99 C212.515,175.99 209.18,179.325 209.18,183.35 L209.18,183.81 C209.18,187.835 212.515,191.17 216.54,191.17 L245.52,191.17 C252.995,191.17 259.665,194.39 264.265,199.45 C264.61,199.795 264.84,200.14 265.185,200.485 C268.75,204.855 270.935,210.49 270.935,216.585 C270.935,230.615 259.55,242 245.52,242 L220.335,242 C206.305,242 194.92,230.615 194.92,216.585 L209.295,216.585 C209.295,222.68 214.24,227.625 220.335,227.625 L245.52,227.625 C251.615,227.625 256.675,222.68 256.675,216.585 C256.675,210.49 251.615,205.545 245.52,205.545 L216.54,205.545 C210.675,205.545 205.385,203.245 201.475,199.45 C200.44,198.415 199.52,197.265 198.715,196 C196.3,192.55 194.92,188.295 194.92,183.695 L194.92,183.235 C194.92,171.275 204.58,161.5 216.54,161.5 L249.2,161.5 C261.16,161.5 270.935,171.275 270.935,183.235 L270.935,183.695 Z M326.535,175.875 C312.275,175.875 300.66,187.49 300.66,201.75 C300.66,216.01 312.275,227.625 326.535,227.625 L366.785,227.625 L366.785,242 L326.535,242 C304.34,242 286.285,223.945 286.285,201.75 C286.285,179.555 304.34,161.5 326.535,161.5 L366.785,161.5 L366.785,175.875 L326.535,175.875 Z M453.435,227.625 L460.795,242 L444.695,242 L437.335,227.625 L419.74,193.125 L402.145,227.625 L394.785,242 L378.685,242 L386.045,227.625 L419.74,161.5 L453.435,227.625 Z M538.82,161.5 L553.195,161.615 L553.195,242.115 L538.82,231.075 L487.07,191.17 L487.07,242.115 L472.695,242.115 L472.695,161.845 L487.07,172.885 L538.82,212.79 L538.82,161.5 Z\"\n            fill=\"#000000\"\n            fillRule=\"nonzero\"\n          ></path>\n        </g>\n      </g>\n    </svg>\n  );\n}\n\nexport default Logo;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { breakpoint, ExternalLink, NavBar, ThemeToggler } from \"@urkellabs/ucl\";\n\n// Containers\nimport SearchBar from \"containers/SearchBar\";\n\n// SVGs\nimport Logo from \"components/svg/Logo\";\n\nconst NavLinkItem = styled(NavBar.Item)`\n  justify-content: center;\n\n  ${breakpoint.upToDesktop} {\n    padding-left: 12px;\n    padding-right: 12px;\n    margin-left: 2.5vw;\n\n    ${NavBar.Link} {\n      padding-left: 0;\n    }\n  }\n`;\n\nconst ThemeTogglerWrapper = styled.div`\n  margin: 0 0.5rem;\n\n  ${breakpoint.upToDesktop} {\n    display: none;\n  }\n`;\n\nconst Burger = styled(NavBar.Burger)`\n  ${breakpoint.upToDesktop} {\n    margin-right: 2.5vw;\n  }\n`;\n\nconst LogoWrapper = styled(NavBar.Item)`\n  width: 85px;\n  ${breakpoint.upToDesktop} {\n    margin-left: 2.5vw;\n  }\n`;\n\nconst IconWrapper = styled.div`\n  display: inline-block;\n  width: 14px;\n`;\n\n//@todo possibly integrate https://usehooks.com/useWindowSize/ to only trigger nav clicks on mobile.\nexport default function Navigation() {\n  const [mobileNav, updateMobileNav] = useState(false);\n  const [moreDropdownActive, updateMoreDropdownActive] = useState(false);\n  const [toolsDropdownActive, updateToolsDropdownActive] = useState(false);\n  return (\n    <NavBar height={\"60px\"}>\n      <NavBar.Container>\n        <NavBar.Brand>\n          <LogoWrapper as={Link} to={\"/\"}>\n            <Logo />\n          </LogoWrapper>\n          <Burger\n            active={mobileNav}\n            onClick={e => updateMobileNav(active => !active)}\n          />\n        </NavBar.Brand>\n        <NavBar.Menu active={mobileNav}>\n          <NavBar.Start>\n            <NavLinkItem\n              as={Link}\n              to={\"/blocks\"}\n              onClick={() => updateMobileNav(active => !active)}\n            >\n              Blocks\n            </NavLinkItem>\n            <NavLinkItem\n              as={Link}\n              to={\"/names\"}\n              onClick={() => updateMobileNav(active => !active)}\n            >\n              Names\n            </NavLinkItem>\n            <NavLinkItem\n              hoverable\n              active={toolsDropdownActive}\n              onClick={e => updateToolsDropdownActive(active => !active)}\n              dropdown\n            >\n              <NavBar.Link>Tools</NavBar.Link>\n              <NavBar.Dropdown\n                onClick={e => {\n                  e.stopPropagation();\n                  updateMobileNav(active => (active ? !active : active));\n                  updateToolsDropdownActive(active =>\n                    active ? !active : active\n                  );\n                }}\n              >\n                <NavBar.Item as={Link} to={\"/status\"}>\n                  Node Status\n                </NavBar.Item>\n                {/* <NavBar.Item as={Link} to={\"/peers\"}> */}\n                {/*   Peers */}\n                {/* </NavBar.Item> */}\n                <NavBar.Item as={Link} to={\"/charts\"}>\n                  Charts\n                </NavBar.Item>\n                {/* <NavBar.Item as={Link} to={\"/airdropclaim\"}>\n                  Claim Your Airdrop\n                </NavBar.Item>\n                <NavBar.Item as={Link} to={\"/mempool\"}>\n                  Mempool\n                </NavBar.Item>\n                <NavBar.Item as={Link} to={\"/logs\"}>\n                  Logs\n                </NavBar.Item> */}\n              </NavBar.Dropdown>\n            </NavLinkItem>\n            <NavLinkItem\n              hoverable\n              active={moreDropdownActive}\n              onClick={e => updateMoreDropdownActive(active => !active)}\n              dropdown\n            >\n              <NavBar.Link>More</NavBar.Link>\n              <NavBar.Dropdown\n                onClick={e => {\n                  e.stopPropagation();\n                  updateMobileNav(active => (active ? !active : active));\n                  updateMoreDropdownActive(active =>\n                    active ? !active : active\n                  );\n                }}\n              >\n                {/*}\n                <NavBar.Item as={Link} to={\"/changelog\"}>\n                  Changelog\n                </NavBar.Item>\n                <NavBar.Item as={Link} to={\"/docs\"}>\n                  API Documenation\n                </NavBar.Item>\n                <NavBar.Item as={Link} to={\"/config\"}>\n                  Config\n                </NavBar.Item> */}\n                <NavBar.Item\n                  as=\"a\"\n                  href=\"https://hnspool.com/docs/introduction\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Start Mining&nbsp;\n                  <IconWrapper>\n                    <ExternalLink />\n                  </IconWrapper>\n                </NavBar.Item>\n                <NavBar.Item\n                  as=\"a\"\n                  href=\"https://github.com/HandshakeAlliance/HNScan/issues\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Report an issue&nbsp;\n                  <IconWrapper>\n                    <ExternalLink />\n                  </IconWrapper>\n                </NavBar.Item>\n                <NavBar.Item as={Link} to=\"/settings\">\n                  Settings\n                </NavBar.Item>\n              </NavBar.Dropdown>\n            </NavLinkItem>\n          </NavBar.Start>\n          <NavBar.End>\n            <NavBar.Item>\n              <SearchBar toggleNav={updateMobileNav} />\n              {/* <ThemeTogglerWrapper> */}\n              {/*   <ThemeToggler /> */}\n              {/* </ThemeTogglerWrapper> */}\n            </NavBar.Item>\n          </NavBar.End>\n        </NavBar.Menu>\n      </NavBar.Container>\n    </NavBar>\n  );\n}\n","import { Link as RouterLink } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Link = styled(RouterLink)`\n  color: rgb(50, 115, 220);\n  cursor: pointer;\n  text-decoration-line: none;\n  text-decoration-style: initial;\n  text-decoration-color: initial;\n  text-decoration: none;\n\n  &:hover {\n    color: rgb(137, 175, 235);\n  }\n`;\n\nexport default Link;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport theme from \"styled-theming\";\n\nconst color = theme(\"mode\", {\n  light: \"#000\",\n  dark: \"#cfcfcf\"\n});\n\nconst LogoText = styled(LogoTextSVG)`\n  fill: ${color};\n`;\n\nfunction LogoTextSVG(props) {\n  return (\n    <svg viewBox=\"0 0 581 82\" {...props}>\n      <title>HNScan</title>\n      <g stroke=\"none\" strokeWidth=\"1\">\n        <path\n          d=\"M66.27862,0.5 L80.65362,0.5 L80.65362,81 L66.27862,81 L66.27862,44.085 L14.52862,44.085 L14.52862,81 L0.15362,81 L0.15362,0.5 L14.52862,0.5 L14.52862,29.71 L66.27862,29.71 L66.27862,0.5 Z M168.82908,0.5 L183.20408,0.615 L183.20408,81.115 L168.82908,70.075 L117.07908,30.17 L117.07908,81.115 L102.70408,81.115 L102.70408,0.845 L117.07908,11.885 L168.82908,51.79 L168.82908,0.5 Z M281.38454,22.695 L267.00954,22.81 L267.00954,22.35 C267.00954,18.325 263.67454,14.99 259.64954,14.99 L226.98954,14.99 C222.96454,14.99 219.62954,18.325 219.62954,22.35 L219.62954,22.81 C219.62954,26.835 222.96454,30.17 226.98954,30.17 L255.96954,30.17 C263.44454,30.17 270.11454,33.39 274.71454,38.45 C275.05954,38.795 275.28954,39.14 275.63454,39.485 C279.19954,43.855 281.38454,49.49 281.38454,55.585 C281.38454,69.615 269.99954,81 255.96954,81 L230.78454,81 C216.75454,81 205.36954,69.615 205.36954,55.585 L219.74454,55.585 C219.74454,61.68 224.68954,66.625 230.78454,66.625 L255.96954,66.625 C262.06454,66.625 267.12454,61.68 267.12454,55.585 C267.12454,49.49 262.06454,44.545 255.96954,44.545 L226.98954,44.545 C221.12454,44.545 215.83454,42.245 211.92454,38.45 C210.88954,37.415 209.96954,36.265 209.16454,35 C206.74954,31.55 205.36954,27.295 205.36954,22.695 L205.36954,22.235 C205.36954,10.275 215.02954,0.5 226.98954,0.5 L259.64954,0.5 C271.60954,0.5 281.38454,10.275 281.38454,22.235 L281.38454,22.695 Z M342.535,14.875 C328.275,14.875 316.66,26.49 316.66,40.75 C316.66,55.01 328.275,66.625 342.535,66.625 L382.785,66.625 L382.785,81 L342.535,81 C320.34,81 302.285,62.945 302.285,40.75 C302.285,18.555 320.34,0.5 342.535,0.5 L382.785,0.5 L382.785,14.875 L342.535,14.875 Z M474.98546,66.625 L482.34546,81 L466.24546,81 L458.88546,66.625 L441.29046,32.125 L423.69546,66.625 L416.33546,81 L400.23546,81 L407.59546,66.625 L441.29046,0.5 L474.98546,66.625 Z M565.92092,0.5 L580.29592,0.615 L580.29592,81.115 L565.92092,70.075 L514.17092,30.17 L514.17092,81.115 L499.79592,81.115 L499.79592,0.845 L514.17092,11.885 L565.92092,51.79 L565.92092,0.5 Z\"\n          fillRule=\"nonzero\"\n        ></path>\n      </g>\n    </svg>\n  );\n}\n\nexport default LogoText;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useTranslation } from \"react-i18next\";\nimport theme from \"styled-theming\";\nimport { Cog, ExternalLink } from \"@urkellabs/ucl\";\n\n// Components\nimport Link from \"components/Link\";\n\n// SVGs\nimport LogoText from \"components/svg/LogoText\";\n\n// const textColor = theme(\"mode\", {\n//   light: \"#4a4a4a\",\n//   dark: \"#afafaf\"\n// });\n\n// const textColorHover = theme(\"mode\", {\n//   light: \"#646464\",\n//   dark: \"#969696\"\n// });\n\nconst Logo = styled(LogoText)`\n  margin-bottom: 10px;\n  width: 100px;\n`;\n\nconst SubText = styled.span`\n  font-size: 10px;\n`;\nconst CogWrapper = styled.div`\n  color: #4a4a4a;\n  margin-bottom: 0.75rem;\n  height: 24px;\n  width: 24px;\n\n  &:hover {\n    color: #646464;\n  }\n`;\n\nconst IconWrapper = styled.div`\n  display: inline-block;\n  width: 10pt;\n`;\n\nexport const FooterContainer = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  width: 100%;\n  height: auto;\n  padding-top: 25px;\n  padding-bottom: 25px;\n`;\n\nexport const ContentContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 90%;\n  height: 100%;\n  margin-bottom: 50px;\n  align-items: center;\n\n  @media (min-width: 1024px) {\n    flex-direction: row;\n    width: 90%;\n    max-width: 1216px;\n  }\n`;\n\nexport const LeftContent = styled.div`\n  height: 100%;\n  text-align: center;\n  max-width: 200px;\n\n  @media (min-width: 1024px) {\n    text-align: left;\n    max-width: none;\n  }\n`;\n\nexport const Tagline = styled.div`\n  margin-bottom: 20px;\n`;\n\nexport const Header = styled.div`\n  text-transform: uppercase;\n  font-size: 10pt;\n  letter-spacing: 1px;\n  font-weight: 700;\n  width: 100%;\n`;\n\n// External Links using <a>\nexport const FooterLink = styled.a`\n  font-size: 10pt;\n  margin: 8px 0;\n  width: 55%;\n  color: #4a4a4a;\n\n  @media (min-width: 445px) {\n    margin: 5px 0;\n  }\n`;\n\nexport const ContactItem = styled(FooterLink)`\n  font-size: 10pt;\n  margin: 5px 0;\n`;\n\nexport const RightContent = styled.div`\n  height: 100%;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: row;\n  margin-top: 50px;\n\n  @media (min-width: 1024px) {\n    margin: 0;\n  }\n`;\n\nexport const LeftLinksContainer = styled.div`\n  height: auto;\n  display: flex;\n  margin-bottom: 30px;\n  flex-wrap: wrap;\n  flex-grow: 1;\n  flex-direction: row;\n\n  @media (min-width: 445px) {\n    margin-bottom: 0;\n  }\n`;\n\nexport const RightLinksContainer = styled.div`\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  flex-grow: 1;\n  flex-direction: row;\n`;\n\nexport const LinksContainer = styled.div`\n  height: auto;\n  min-width: 100px;\n  display: flex;\n  flex-wrap: wrap;\n  flex-grow: 1;\n  flex-direction: column;\n  text-align: center;\n  align-items: center;\n`;\n\n// ----- Toggle Switch and Copyright -----\nexport const SubTextContainer = styled.div`\n  width: 90%;\n  height: auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport default function Footer() {\n  const { t } = useTranslation();\n  return (\n    <FooterContainer>\n      <ContentContainer>\n        <LeftContent>\n          <Logo />\n          <Tagline>{t(\"footer.tagline\")}</Tagline>\n          <Header>{t(\"footer.contact\")}</Header>\n          <ContactItem href=\"mailto:support@hnscan.com\">\n            {t(\"footer.support_email\")}\n          </ContactItem>\n        </LeftContent>\n        <RightContent>\n          <LeftLinksContainer>\n            <LinksContainer>\n              <Header>{t(\"footer.explore\")}</Header>\n              <FooterLink as={Link} to=\"/\">\n                {t(\"footer.home\")}\n              </FooterLink>\n              <FooterLink as={Link} to=\"/blocks\">\n                {t(\"footer.blocks\")}\n              </FooterLink>\n              <FooterLink as={Link} to=\"/names\">\n                {t(\"footer.names\")}\n              </FooterLink>\n            </LinksContainer>\n            <LinksContainer>\n              <Header>{t(\"footer.tools\")}</Header>\n              <FooterLink as={Link} to=\"/peers\">\n                {t(\"footer.peers\")}\n              </FooterLink>\n              <FooterLink as={Link} to=\"/status\">\n                {t(\"footer.node_status\")}\n              </FooterLink>\n              <FooterLink as={Link} to=\"/charts\">\n                {t(\"footer.charts\")}\n              </FooterLink>\n            </LinksContainer>\n          </LeftLinksContainer>\n          <RightLinksContainer>\n            <LinksContainer>\n              <Header>\n                {t(\"footer.related\")}&nbsp;\n                <IconWrapper>\n                  <ExternalLink />\n                </IconWrapper>\n              </Header>\n              <FooterLink\n                href=\"https://handshakeacademy.org\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                {t(\"footer.academy\")}\n              </FooterLink>\n              <FooterLink\n                href=\"https://hnspool.com\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                {t(\"footer.pool\")}\n              </FooterLink>\n              <FooterLink\n                href=\"https://urkellabs.com\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                {t(\"footer.urkel\")}\n              </FooterLink>\n              <FooterLink\n                href=\"https://handshake.org/files/handshake.txt\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                {t(\"footer.paper\")}\n              </FooterLink>\n            </LinksContainer>\n            <LinksContainer>\n              <Header>\n                {t(\"footer.follow\")}&nbsp;\n                <IconWrapper>\n                  <ExternalLink />\n                </IconWrapper>\n              </Header>\n              <FooterLink\n                href=\"https://github.com/handshakealliance\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                {t(\"footer.github\")}\n              </FooterLink>\n              <FooterLink\n                href=\"https://medium.com/@handshakealliance\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                {t(\"footer.medium\")}\n              </FooterLink>\n              <FooterLink\n                href=\"https://twitter.com/hnsalliance\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                {t(\"footer.twitter\")}\n              </FooterLink>\n            </LinksContainer>\n          </RightLinksContainer>\n        </RightContent>\n      </ContentContainer>\n      <SubTextContainer>\n        <CogWrapper as={Link} to=\"/settings\">\n          <Cog />\n        </CogWrapper>\n        <SubText>\n          {t(\"footer.version\")}:{\" \"}\n          <a\n            href=\"https://github.com/HandshakeAlliance/HNScan\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            {process.env.REACT_APP_GIT_SHA}\n          </a>\n        </SubText>\n        <SubText>&#9400; {t(\"footer.copyright\")}</SubText>\n      </SubTextContainer>\n    </FooterContainer>\n  );\n}\n","import styled from \"styled-components\";\n\nimport { breakpoint } from \"@urkellabs/ucl\";\n\nconst ContentContainer = styled.div`\n  width: 95%;\n  margin: 50px auto 60px;\n  border-radius: 10px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  min-height: calc(100vh - 460px);\n  ${breakpoint.desktop} {\n    width: 90%;\n    max-width: 1216px;\n  }\n`;\n\nexport default ContentContainer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Table } from \"@urkellabs/ucl\";\nimport styled from \"styled-components\";\nimport { useTranslation } from \"react-i18next\";\n\n// Components\nimport Link from \"components/Link\";\n\nconst CellWrapper = styled(Table.Td)`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst DivWrapper = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  padding: 12px;\n`;\n\nconst Value = styled.span`\n  font-size: ${props => (props.cell ? \"12px\" : \"16px\")};\n  word-wrap: break-word;\n  word-break: break-all;\n`;\n\nconst Label = styled.span`\n  font-weight: 800;\n  font-size: ${props => (props.cell ? \"14px\" : \"16px\")};\n`;\n\nconst StackedBody = props => {\n  return (\n    <>\n      <Label {...props}>{props.t(props.label)}</Label>\n      <Value {...props}>\n        {props.link ? <Link to={props.link}>{props.value}</Link> : props.value}\n      </Value>\n    </>\n  );\n};\n\nconst StackedData = props => {\n  const { t } = useTranslation();\n  return props.cell ? (\n    <CellWrapper>\n      {\" \"}\n      <StackedBody t={t} {...props} />{\" \"}\n    </CellWrapper>\n  ) : (\n    <DivWrapper>\n      {\" \"}\n      <StackedBody t={t} {...props} />{\" \"}\n    </DivWrapper>\n  );\n};\n\nStackedData.propTypes = {\n  cell: PropTypes.bool,\n  label: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.element\n  ]).isRequired,\n  link: PropTypes.string\n};\n\nexport default StackedData;\n","import humanizeDuration from \"humanize-duration\";\nimport Decimal from \"decimal.js\";\n\nconst exponentScales = [\n  {\n    val: 1000000000000000000000000000000000,\n    name: \"?\",\n    abbreviation: \"V\",\n    exponent: \"33\"\n  },\n  {\n    val: 1000000000000000000000000000000,\n    name: \"?\",\n    abbreviation: \"W\",\n    exponent: \"30\"\n  },\n  {\n    val: 1000000000000000000000000000,\n    name: \"?\",\n    abbreviation: \"X\",\n    exponent: \"27\"\n  },\n  {\n    val: 1000000000000000000000000,\n    name: \"yotta\",\n    abbreviation: \"Y\",\n    exponent: \"24\"\n  },\n  {\n    val: 1000000000000000000000,\n    name: \"zetta\",\n    abbreviation: \"Z\",\n    exponent: \"21\"\n  },\n  { val: 1000000000000000000, name: \"exa\", abbreviation: \"E\", exponent: \"18\" },\n  { val: 1000000000000000, name: \"peta\", abbreviation: \"P\", exponent: \"15\" },\n  { val: 1000000000000, name: \"tera\", abbreviation: \"T\", exponent: \"12\" },\n  { val: 1000000000, name: \"giga\", abbreviation: \"G\", exponent: \"9\" },\n  { val: 1000000, name: \"mega\", abbreviation: \"M\", exponent: \"6\" },\n  { val: 1000, name: \"kilo\", abbreviation: \"K\", exponent: \"3\" },\n  { val: 0.001, name: \"milli\", abbreviation: \"m\", exponent: \"-3\" },\n  { val: 0.000001, name: \"micro\", abbreviation: \"µ\", exponent: \"-6\" },\n  { val: 0.000000001, name: \"nano\", abbreviation: \"n\", exponent: \"-9\" },\n  { val: 0.000000000001, name: \"pico\", abbreviation: \"p\", exponent: \"-12\" }\n];\n\nexport function formatLargeNumber(n, decimalPlaces) {\n  for (let i = 0; i < exponentScales.length; i++) {\n    let item = exponentScales[i];\n\n    let fraction = new Decimal(n / item.val);\n    if (fraction >= 1) {\n      return [fraction.toDecimalPlaces(decimalPlaces), item];\n    }\n  }\n\n  return [new Decimal(n).toDecimalPlaces(decimalPlaces), {}];\n}\n\n//We need to use Bignum across the board in this app. Make that a v2 task XXX\nexport function hnsValues(amount) {\n  if (amount == null) return null;\n\n  let realAmount = amount / 1000000;\n  let stringAmount = numberWithCommas(realAmount).toString();\n  stringAmount += \" HNS\";\n  return stringAmount;\n}\n\nexport function numberWithCommas(x) {\n  let parts = x.toString().split(\".\");\n  parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  return parts.join(\".\");\n}\n\nexport function truncateHash(hash) {\n  let num = 7;\n  let len = hash.length;\n  let firstHalf = hash.substring(0, num);\n  let secondHalf = hash.substring(len - num, len);\n\n  if (num * 2 >= hash) {\n    //can't be truncated with given num value\n    return hash;\n  }\n\n  return firstHalf + \"....\" + secondHalf;\n}\n\nexport function sumTxOutputs(outputs) {\n  let sum = 0;\n\n  for (let i = 0; i < outputs.length; i++) {\n    sum = +outputs[i].value;\n  }\n\n  return sum;\n}\n\n// Takes in a time stamp and returns the time ago something was (humanized)\nexport function timeAgo(timestamp) {\n  if (timestamp <= 0) return;\n  return (\n    humanizeDuration(Date.now() - timestamp * 1000, {\n      largest: 1,\n      round: true\n    }) + \" ago\"\n  );\n}\n\nexport function sciNotation(num, places) {\n  let arr = toSciNotation(num);\n  let number = arr[0].toFixed(places);\n  let exponent = arr[1];\n\n  return [number, exponent];\n}\n\n// Takes in a number and returns an array\n// return: [decimal, exponent]\nfunction toSciNotation(num) {\n  if (typeof num !== \"number\") {\n    return;\n  }\n\n  if (!num) {\n    return [0, 0];\n  }\n\n  let sign = Math.sign(num);\n  let coefficient = Math.abs(num);\n  let isLarge = Math.floor(coefficient);\n  let exponent = 0;\n\n  if (isLarge) {\n    while (Math.floor(coefficient / 10) > 0) {\n      coefficient /= 10;\n      exponent++;\n    }\n  } else {\n    while (Math.floor(coefficient) < 1) {\n      coefficient *= 10;\n      exponent--;\n    }\n  }\n  return [sign * coefficient, exponent];\n}\n\n//@todo\nexport function checkPool(minerAddress) {\n  //Check if a pool exists with this address, otherwise just return.\n\n  return minerAddress;\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport {\n  Row,\n  Col,\n  Card,\n  Skeleton,\n  Header,\n  Code,\n  breakpoint\n} from \"@urkellabs/ucl\";\nimport { useTranslation } from \"react-i18next\";\n\n// Components\nimport StackedData from \"components/shared/StackedData\";\n\n// Util\nimport { hnsValues } from \"utils/util\";\n\nconst AddressWrapper = styled.div`\n  width: 100%;\n  word-wrap: break-word;\n  margin-bottom: 16px;\n  padding: 10px;\n`;\n\nconst AddressHash = styled(Code)`\n  background: transparent;\n  font-size: 14px;\n  max-width: 400px;\n  padding: 0;\n\n  ${breakpoint.tablet} {\n    max-width: initial;\n  }\n\n  * {\n    margin-left: 4px;\n  }\n`;\n\nconst AddressTitle = styled(Header)`\n  font-weight: 700;\n`;\n\nconst SkeletonWrapper = styled.div`\n  width: 225px;\n`;\n\nexport default function AddressSummary({ hash, received, spent, confirmed }) {\n  const { t } = useTranslation();\n  return (\n    <>\n      <AddressWrapper>\n        <AddressTitle small>{t(\"address_detail.address\")}</AddressTitle>\n        <AddressHash copy>{hash || <Skeleton />}</AddressHash>\n      </AddressWrapper>\n      <Card title={t(\"address_detail.summary\")}>\n        <Row>\n          <Col mobile={12} tablet>\n            <StackedData\n              label=\"address_detail.balance\"\n              value={\n                hnsValues(confirmed) || (\n                  <SkeletonWrapper>\n                    <Skeleton />\n                  </SkeletonWrapper>\n                )\n              }\n            />\n          </Col>\n          <Col mobile={12} tablet>\n            <StackedData\n              label=\"address_detail.received\"\n              value={\n                hnsValues(received) || (\n                  <SkeletonWrapper>\n                    <Skeleton />\n                  </SkeletonWrapper>\n                )\n              }\n            />\n          </Col>\n          <Col mobile={12} tablet>\n            <StackedData\n              label=\"address_detail.spent\"\n              value={\n                hnsValues(spent) || (\n                  <SkeletonWrapper>\n                    <Skeleton />\n                  </SkeletonWrapper>\n                )\n              }\n            />\n          </Col>\n        </Row>\n      </Card>\n    </>\n  );\n}\n","import React from \"react\";\n\n// Components\nimport AddressSummary from \"components/address/AddressSummary\";\n\nconst AddressSkeleton = () => (\n  <>\n    <AddressSummary />\n  </>\n);\n\nexport default AddressSkeleton;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Trans } from \"react-i18next\";\n\nimport Link from \"components/Link\";\n\n// Util\n//@todo rename to toHNS()\nimport { hnsValues } from \"utils/util\";\n\nconst Container = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n`;\n\nconst Title = styled.span`\n  font-size: 16px;\n  font-weight: 600;\n`;\n\nconst DataContainer = styled.div`\n  width: auto;\n  text-align: left;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst PutsWrapper = styled.div`\n  padding: 10px;\n  text-align: center;\n`;\n\nfunction renderInput(input) {\n  if (input.coinbase) {\n    return (\n      <Trans\n        i18nKey=\"puts_list.input_from_reward\"\n        values={{ value: hnsValues(input.value) }}\n      />\n    );\n  } else if (input.airdrop) {\n    return <Trans i18nKey=\"puts_list.airdrop_claim\" />;\n  } else {\n    return (\n      <Trans\n        i18nKey=\"puts_list.input_from\"\n        values={{ value: hnsValues(input.value), address: input.address }}\n      >\n        <Link to={\"/address/\" + input.address}></Link>\n      </Trans>\n    );\n  }\n}\n\nexport const InputList = props => {\n  const inputs = props.inputs.map((input, index) => (\n    <PutsWrapper key={index}>{renderInput(input)}</PutsWrapper>\n  ));\n\n  return (\n    <Container>\n      <Title>\n        <Trans i18nKey=\"puts_list.input\" count={inputs.length} />\n      </Title>\n      <DataContainer>{inputs}</DataContainer>\n    </Container>\n  );\n};\n\nconst renderOutputAction = output => {\n  if (output.action === \"NONE\") {\n    return (\n      <Trans\n        i18nKey=\"puts_list.output_to\"\n        values={{ value: hnsValues(output.value), address: output.address }}\n      >\n        <Link to={\"/address/\" + output.address}></Link>\n      </Trans>\n    );\n  } else if (output.action === \"BID\") {\n    return (\n      <Trans\n        i18nKey=\"puts_list.output_for_of\"\n        values={{\n          action: output.action,\n          name: output.name,\n          value: hnsValues(output.value)\n        }}\n      >\n        <Link to={\"/name/\" + output.name}></Link>\n      </Trans>\n    );\n  } else {\n    return (\n      <Trans\n        i18nKey=\"puts_list.output_for\"\n        values={{ action: output.action, name: output.name }}\n      >\n        <Link to={\"/name/\" + output.name}></Link>\n      </Trans>\n    );\n  }\n};\n\nexport const OutputList = props => {\n  const outputs = props.outputs.map((output, index) => (\n    <PutsWrapper key={index}>{renderOutputAction(output)}</PutsWrapper>\n  ));\n\n  return (\n    <Container>\n      <Title>\n        <Trans i18nKey=\"puts_list.output\" count={outputs.length} as={Title} />\n      </Title>\n      <DataContainer>{outputs}</DataContainer>\n    </Container>\n  );\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Row, Col, Pagination, Card, useQuery } from \"@urkellabs/ucl\";\nimport theme from \"styled-theming\";\nimport { useTranslation } from \"react-i18next\";\n\n// Components\nimport { InputList, OutputList } from \"components/shared/PutsList\";\nimport Link from \"components/Link\";\n\n// const borderColor = theme(\"mode\", {\n//   light: \"#dfdfdf\",\n//   dark: \"#575757\"\n// });\n\nconst Container = styled.div`\n  width: 100%;\n  padding: 10px 0;\n  display: flex;\n  flex-direction: column;\n  border-bottom: 2px solid #dfdfdf;\n\n  &:first-child {\n    padding: 0;\n  }\n\n  &:last-child {\n    padding: 0;\n    border-bottom: 0;\n  }\n`;\n\nconst HashWrapper = styled.div`\n  border-bottom: 1px solid #dfdfdf;\n  display: flex;\n  padding: 10px 0 10px 0;\n`;\n\n//@todo Highlight the Input/Output that is TO the address here.\n//Just make this a filter option (so it could be used on the block page), but auto enable it when coming from the Address page, that way we can keep this same component.\n//Filter options.\n//To/From\n//Covenant Actions\nconst TransactionList = ({ url, page, from }) => {\n  //@todo these will come from filtering options.\n  const limit = 10;\n  const offset = (page - 1) * limit;\n  from.limit = limit;\n  from.offset = offset;\n  const { data } = useQuery(\"/txs\", from);\n  const { t } = useTranslation();\n  const pages = Math.ceil(data.total / limit);\n  const renderTransactions = data.result.map((tx, index) => (\n    <Container key={index}>\n      <HashWrapper>\n        Tx {index + 1 + offset}:&nbsp;\n        <Link to={\"/tx/\" + tx.tx_id}>{tx.tx_id}</Link>\n      </HashWrapper>\n      <Row>\n        <Col mobile={12} tablet>\n          <InputList inputs={tx.inputs} />\n        </Col>\n        <Col mobile={12} tablet>\n          <OutputList outputs={tx.outputs} />\n        </Col>\n      </Row>\n    </Container>\n  ));\n  if (!data.result.length) {\n    return <></>;\n  }\n  return (\n    <>\n      <Card\n        collapse\n        title={`${t(\"block_detail.transaction\", {\n          count: data.result.length\n        })} (${offset + 1}-${offset + data.result.length})`}\n      >\n        {renderTransactions}\n      </Card>\n      <Pagination totalPages={pages} page={page} url={url} />\n    </>\n  );\n};\n\nexport default TransactionList;\n","import React, { Suspense } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { usePage, useQuery, Spacer } from \"@urkellabs/ucl\";\n\n// Components\nimport AddressSummary from \"components/address/AddressSummary\";\nimport AddressSkeleton from \"components/address/AddressSkeleton\";\n\n// Containers\nimport TransactionList from \"containers/TransactionList\";\n\n//@todo if someone requests a wrong address (IE wrong network, help them understand). Show a screen for that.\n//@todo show a QR code component here.\n//@todo Allow a copy button for the QR code as well, if we implement it.\nfunction AddressView({ hash, page, url }) {\n  const { data: address } = useQuery(\"/addresses/\" + hash);\n\n  return (\n    <>\n      <AddressSummary\n        hash={hash}\n        received={address.received}\n        spent={address.spent}\n        confirmed={address.confirmed}\n      />\n      <Spacer />\n      <Suspense fallback={<div>Loading...</div>}>\n        <TransactionList\n          url={\"/address/\" + hash}\n          page={page}\n          from={{ address: hash }}\n        />\n      </Suspense>\n    </>\n  );\n}\n\nexport default function Address() {\n  const page = usePage();\n  const { hash } = useParams();\n  return (\n    <Suspense fallback={<AddressSkeleton />}>\n      <AddressView hash={hash} page={page} />\n    </Suspense>\n  );\n}\n","import React from \"react\";\nimport { Row, Col, Card } from \"@urkellabs/ucl\";\nimport { useParams } from \"react-router-dom\";\n\n// Components\nimport StackedData from \"components/shared/StackedData\";\n\n// Util\nimport { timeAgo, hnsValues, checkPool } from \"utils/util\";\nimport { useTranslation } from \"react-i18next\";\n\nconst BlockSummarySkeleton = () => {\n  let params = useParams();\n  return <Card title={`Block ${params.height} Summary`}></Card>;\n};\n\nexport default function BlockSummary({ block, skeleton }) {\n  const { t } = useTranslation();\n  if (skeleton) {\n    return <BlockSummarySkeleton />;\n  }\n  return (\n    <Card title={t(\"block_detail.summary\", { height: block.height })}>\n      <Row>\n        <Col mobile={12} tablet>\n          <StackedData\n            label=\"block_detail.received\"\n            value={timeAgo(block.time)}\n          />\n        </Col>\n        <Col mobile={12} tablet>\n          <StackedData label=\"block_detail.total_txs\" value={block.num_tx} />\n        </Col>\n        <Col mobile={12} tablet>\n          <StackedData\n            label=\"block_detail.total_fees\"\n            value={hnsValues(block.fees)}\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col mobile={12} tablet>\n          <StackedData\n            label=\"block_detail.mined_by\"\n            value={checkPool(block.mined_by)}\n            link={\"/address/\" + block.mined_by}\n          />\n        </Col>\n        <Col mobile={12} tablet>\n          <StackedData label=\"block_detail.weight\" value={block.weight} />\n        </Col>\n        <Col mobile={12} tablet>\n          <StackedData\n            label=\"block_detail.confirmations\"\n            value={block.confirmations}\n          />\n        </Col>\n      </Row>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Row, Col, Card, Table } from \"@urkellabs/ucl\";\nimport { useTranslation } from \"react-i18next\";\n\n// Components\nimport StackedData from \"components/shared/StackedData\";\n\n// Util\nimport { sciNotation } from \"utils/util\";\n\nexport default function BlockAdvanced({ block }) {\n  let [difficulty, exponent] = sciNotation(block.difficulty, 5);\n  const { t } = useTranslation();\n  return (\n    <Card title={t(\"block_detail.advanced\")} collapse closed>\n      {/* @todo need auxilary labels -> bytes for size, scientific format for diff, etc */}\n      <Row>\n        <Col mobile={12} desktop>\n          <Table>\n            <Table.Body>\n              {block.previous_hash && (\n                <Table.Tr>\n                  <StackedData\n                    cell\n                    label=\"block_detail.previous_block\"\n                    value={block.previous_hash}\n                    link={\"/block/\" + (block.height - 1)}\n                  />\n                </Table.Tr>\n              )}\n              <Table.Tr>\n                <StackedData\n                  cell\n                  label=\"block_detail.timestamp\"\n                  value={block.time}\n                />\n              </Table.Tr>\n              <Table.Tr>\n                <StackedData\n                  cell\n                  label=\"block_detail.difficulty\"\n                  value={\n                    <span>\n                      {difficulty} x 10<sup>{exponent}</sup>\n                    </span>\n                  }\n                />\n              </Table.Tr>\n              <Table.Tr>\n                <StackedData\n                  cell\n                  label=\"block_detail.version\"\n                  value={block.version}\n                />\n              </Table.Tr>\n              <Table.Tr>\n                <StackedData\n                  cell\n                  label=\"block_detail.bits\"\n                  value={block.bits}\n                />\n              </Table.Tr>\n              <Table.Tr>\n                <StackedData\n                  cell\n                  label=\"block_detail.size\"\n                  value={block.size + \" bytes\"}\n                />\n              </Table.Tr>\n              <Table.Tr>\n                <StackedData\n                  cell\n                  label=\"block_detail.nonce\"\n                  value={block.nonce}\n                />\n              </Table.Tr>\n              <Table.Tr>\n                <StackedData\n                  cell\n                  label=\"block_detail.extra_nonce\"\n                  value={block.extra_nonce}\n                />\n              </Table.Tr>\n            </Table.Body>\n          </Table>\n        </Col>\n        <Col mobile={12} desktop>\n          <Table>\n            <Table.Body>\n              {block.next_hash && (\n                <Table.Tr>\n                  <StackedData\n                    cell\n                    label=\"block_detail.next_block\"\n                    value={block.next_hash}\n                    link={\"/block/\" + (block.height + 1)}\n                  />\n                </Table.Tr>\n              )}\n              <Table.Tr>\n                <StackedData\n                  cell\n                  label=\"block_detail.hash\"\n                  value={block.hash}\n                />\n              </Table.Tr>\n              <Table.Tr>\n                <StackedData\n                  cell\n                  label=\"block_detail.merkle_root\"\n                  value={block.merkle_root}\n                />\n              </Table.Tr>\n              <Table.Tr>\n                <StackedData\n                  cell\n                  label=\"block_detail.witness_root\"\n                  value={block.witness_root}\n                />\n              </Table.Tr>\n              <Table.Tr>\n                <StackedData\n                  cell\n                  label=\"block_detail.tree_root\"\n                  value={block.tree_root}\n                />\n              </Table.Tr>\n              <Table.Tr>\n                <StackedData\n                  cell\n                  label=\"block_detail.reserved_root\"\n                  value={block.reserved_root}\n                />\n              </Table.Tr>\n              <Table.Tr>\n                <StackedData\n                  cell\n                  label=\"block_detail.mask\"\n                  value={block.mask}\n                />\n              </Table.Tr>\n              <Table.Tr>\n                <StackedData\n                  cell\n                  label=\"block_detail.chainwork\"\n                  value={block.chainwork}\n                />\n              </Table.Tr>\n            </Table.Body>\n          </Table>\n        </Col>\n      </Row>\n    </Card>\n  );\n}\n","import React, { Suspense } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { usePage, useQuery, Spacer } from \"@urkellabs/ucl\";\n\n// Components\nimport BlockSummary from \"components/block/BlockSummary\";\nimport BlockAdvanced from \"components/block/BlockAdvanced\";\n\n// Containers\nimport TransactionList from \"containers/TransactionList\";\n\nfunction BlockSkeleton() {\n  return (\n    <>\n      <BlockSummary skeleton />\n    </>\n  );\n}\n\n//@todo move most of this into a component, not in here.\n//@todo save preferences on advanced if it's open or closed.\nfunction BlockContainer({ height, page }) {\n  const { data: block } = useQuery(\"/blocks/\" + height);\n\n  return (\n    <>\n      <BlockSummary block={block} />\n      <Spacer px={20} />\n      <BlockAdvanced block={block} />\n      <Spacer px={20} />\n      <Suspense fallback={<div>Loading...</div>}>\n        <TransactionList\n          url={\"/block/\" + height}\n          page={page}\n          from={{ height }}\n        />\n      </Suspense>\n    </>\n  );\n}\n\nexport default function Block() {\n  const page = usePage();\n  const { height } = useParams();\n  return (\n    <>\n      <Suspense fallback={<BlockSkeleton />}>\n        <BlockContainer height={height} page={page} />\n      </Suspense>\n    </>\n  );\n}\n","import React from \"react\";\nimport { Pagination, Card, Skeleton, Hidden, Table } from \"@urkellabs/ucl\";\nimport { useTranslation } from \"react-i18next\";\n\n// Components\nimport Link from \"components/Link\";\n\n// Util\nimport { timeAgo, truncateHash } from \"utils/util\";\n\nfunction Row({ height, size, time, miner, txs, loading }) {\n  const { t } = useTranslation();\n  if (loading) {\n    // @todo figure out a more elegant way to construct the skeleton\n    return (\n      <Table.Tr>\n        <Hidden onlyMobile as={Table.Td} width=\"10%\">\n          <Skeleton />\n        </Hidden>\n        <Table.Td>\n          <Skeleton />\n        </Table.Td>\n        <Table.Td width=\"50%\">\n          <Skeleton />\n        </Table.Td>\n        <Table.Td width=\"10%\">\n          <Skeleton />\n        </Table.Td>\n        <Hidden onlyMobile as={Table.Td} width=\"10%\">\n          <Skeleton />\n        </Hidden>\n      </Table.Tr>\n    );\n  }\n  return (\n    <Table.Tr>\n      <Table.Td>\n        <Link to={\"/block/\" + height}>{height}</Link>\n        <Hidden tablet>{t(\"blocks.size\") + size} </Hidden>\n      </Table.Td>\n      <Hidden onlyMobile as={Table.Td}>\n        {timeAgo(time)}\n      </Hidden>\n      <Table.Td>\n        <Hidden onlyMobile>\n          <Link to={\"/address/\" + miner}>{miner}</Link>\n        </Hidden>\n        <Hidden tablet>\n          <Link to={\"/address/\" + miner}>{truncateHash(miner)}</Link>\n        </Hidden>\n        <Hidden tablet>{timeAgo(time)}</Hidden>\n      </Table.Td>\n      <Hidden onlyMobile as={Table.Td}>\n        {size}\n      </Hidden>\n      <Table.Td>{txs}</Table.Td>\n    </Table.Tr>\n  );\n}\n\nfunction BlocksTableStructure({ children }) {\n  const { t } = useTranslation();\n  return (\n    <Card title={t(\"blocks.title\")}>\n      <Table>\n        <Table.Head>\n          <Table.Tr>\n            <Table.Th>{t(\"blocks.height\")}</Table.Th>\n            <Hidden onlyMobile as={Table.Th}>\n              {t(\"blocks.age\")}\n            </Hidden>\n            <Table.Th>{t(\"blocks.miner\")}</Table.Th>\n            <Hidden onlyMobile as={Table.Th}>\n              {t(\"blocks.size\")}\n            </Hidden>\n            <Table.Th>{t(\"blocks.txs\")}</Table.Th>\n          </Table.Tr>\n        </Table.Head>\n        <Table.Body>{children}</Table.Body>\n      </Table>\n    </Card>\n  );\n}\n\nexport function BlocksSkeleton() {\n  const rows = [];\n  for (let i = 0; i < 24; i++) rows.push(<Row key={i} loading />);\n  return (\n    <>\n      <BlocksTableStructure>{rows}</BlocksTableStructure>\n    </>\n  );\n}\n\nexport function BlocksTable({ blocks, pages, page }) {\n  const blockRows = blocks.map(block => (\n    <Row\n      key={block.height}\n      height={block.height}\n      size={block.size}\n      time={block.time}\n      miner={block.miner}\n      txs={block.txs}\n    />\n  ));\n  return (\n    <>\n      <BlocksTableStructure>{blockRows}</BlocksTableStructure>\n      <Pagination totalPages={pages} page={page} url=\"/blocks\" />\n    </>\n  );\n}\n","import React, { Suspense } from \"react\";\nimport { usePage, useQuery, EmptyState } from \"@urkellabs/ucl\";\n\n// Components\nimport { BlocksTable, BlocksSkeleton } from \"components/block/BlocksTable\";\n\nfunction BlocksView({ page }) {\n  const pageOffset = (page - 1) * 25;\n\n  const { data } = useQuery(\"/blocks\", { offset: pageOffset });\n\n  const pages = Math.ceil(data.total / 25);\n\n  if (data.result.length === 0) {\n    return <EmptyState />;\n  }\n\n  return <BlocksTable blocks={data.result} pages={pages} page={page} />;\n}\n\nexport default function Blocks() {\n  const page = usePage();\n\n  return (\n    <>\n      <Suspense fallback={<BlocksSkeleton />}>\n        <BlocksView page={page} />\n      </Suspense>\n    </>\n  );\n}\n","import React from \"react\";\nimport { Row, Col, Card } from \"@urkellabs/ucl\";\nimport { useTranslation } from \"react-i18next\";\n\n// Components\nimport StackedData from \"components/shared/StackedData\";\n\n// Util\nimport { formatLargeNumber, sciNotation } from \"utils/util\";\n\nfunction handleUnconfirmed(data, size) {\n  if (data === 0) {\n    return \"-\";\n  } else {\n    return `${data} txs (${size[0]} ${size[1].abbreviation}B)`;\n  }\n}\n\n//@todo skeleton.\nexport default function NetworkSummary({ info }) {\n  let hashrate = formatLargeNumber(info.hashrate, 3);\n  let unconfirmed = info.unconfirmed;\n  let memSize = formatLargeNumber(info.unconfirmed_size, 2);\n  let network = info.network;\n  let difficulty = sciNotation(info.difficulty, 3);\n  let chainwork = sciNotation(parseInt(\"0x\" + info.chain_work), 2);\n  let registeredNames = info.registered_names;\n\n  const { t } = useTranslation();\n\n  return (\n    <Card title={t(\"home.summary\")}>\n      {/* ----- Network Summary - Top Row ----- */}\n      <Row>\n        <Col mobile={12} tablet>\n          <StackedData\n            label=\"home.hashrate\"\n            value={`${hashrate[0].toString()} ${hashrate[1].abbreviation}H/s`}\n          />\n        </Col>\n        <Col mobile={12} tablet>\n          <StackedData\n            label=\"home.unconfirmed\"\n            value={handleUnconfirmed(unconfirmed, memSize)}\n          />\n        </Col>\n        <Col mobile={12} tablet>\n          <StackedData label=\"home.network\" value={network} />\n        </Col>\n      </Row>\n      <Row>\n        <Col mobile={12} tablet>\n          <StackedData label=\"home.opened_names\" value={registeredNames} />\n        </Col>\n        <Col mobile={12} tablet>\n          <StackedData\n            label=\"home.difficulty\"\n            value={\n              <>\n                {difficulty[0]} x 10\n                <sup>{difficulty[1]}</sup>\n              </>\n            }\n          />\n        </Col>\n        <Col mobile={12} tablet>\n          <StackedData\n            label=\"home.chainwork\"\n            value={\n              <>\n                {chainwork[0]} x 10\n                <sup>{chainwork[1]}</sup>\n              </>\n            }\n          />\n        </Col>\n      </Row>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport theme from \"styled-theming\";\n\nconst color = theme(\"mode\", {\n  light: \"#000\",\n  dark: \"#cfcfcf\"\n});\n\nconst Arrow = styled(ArrowIcon)`\n  // stroke: ${color};\nstroke: var(--color-gray-7);\n`;\n\nfunction ArrowIcon(props) {\n  return (\n    <svg width=\"70%\" height=\"70%\" viewBox=\"0 0 30 31\" {...props}>\n      <g fill=\"none\">\n        <polygon\n          strokeWidth=\"3\"\n          transform=\"translate(13.500000, 15.500000) rotate(90.000000) translate(-13.500000, -15.500000) \"\n          points=\"13.5 4 25 27 2 27\"\n        />\n      </g>\n    </svg>\n  );\n}\n\nexport default Arrow;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport {\n  Card,\n  Flex,\n  Col,\n  Row,\n  Spacer,\n  Text,\n  breakpoint,\n  EmptyState\n} from \"@urkellabs/ucl\";\nimport { useTranslation, Trans } from \"react-i18next\";\nimport { useHistory } from \"react-router-dom\";\n\n// Components\nimport Link from \"components/Link\";\n\n// SVGs\nimport Arrow from \"components/svg/RightArrow\";\n\n// Util\nimport { truncateHash, timeAgo, hnsValues } from \"utils/util\";\n\nlet ArrowIcon = styled(Arrow)`\n  height: 20px;\n  width: 20px;\n  margin-right: 5px;\n`;\n\nlet Time = styled(Flex)`\n  ${breakpoint.tablet} {\n    justify-content: flex-end;\n  }\n`;\n\nconst Transaction = ({ tx }) => {\n  return (\n    <Row>\n      <Spacer px={10} />\n      <Col mobile={12} tablet>\n        <Flex columns>\n          <Flex>\n            <ArrowIcon />\n            <Text small>\n              <Trans\n                i18nKey=\"home.tx_num\"\n                values={{ hash: truncateHash(tx.tx_id) }}\n              >\n                <Link to={\"/tx/\" + tx.tx_id}></Link>\n              </Trans>\n            </Text>\n          </Flex>\n          <Flex>\n            <Text small>\n              <Trans\n                i18nKey=\"home.amount\"\n                values={{ amount: hnsValues(tx.value) }}\n              />\n            </Text>\n          </Flex>\n          <Text small>\n            <Trans i18nKey=\"home.fee\" values={{ fee: hnsValues(tx.fee) }} />\n          </Text>\n        </Flex>\n      </Col>\n      <Col mobile={12} tablet>\n        {/* @todo instead of putting time here, it would be cool to put the Transaction type. */}\n        <Time>\n          <Text small>{timeAgo(tx.time)}</Text>\n        </Time>\n      </Col>\n      <Spacer px={10} />\n    </Row>\n  );\n};\n\nexport default function RecentTransactions({ txs }) {\n  const { t } = useTranslation();\n  let history = useHistory();\n\n  if (txs.length === 0) {\n    return (\n      <Card title={t(\"home.recent_transactions\")}>\n        <EmptyState\n          header=\"No transactions yet\"\n          icon={<Arrow />}\n          action={() => {\n            history.push(\"/status\");\n          }}\n          actionTitle=\"Check Node Status\"\n        />\n      </Card>\n    );\n  }\n\n  const txRows = txs.map((tx, index) => <Transaction key={index} tx={tx} />);\n\n  return <Card title={t(\"home.recent_transactions\")}>{txRows}</Card>;\n}\n\nRecentTransactions.propTypes = {\n  txs: PropTypes.array\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport theme from \"styled-theming\";\n\nconst color = theme(\"mode\", {\n  light: \"#000\",\n  dark: \"#cfcfcf\"\n});\n\nconst Block = styled(BlockIcon)`\n  fill: ${color};\n`;\n\nfunction BlockIcon(props) {\n  return (\n    <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 44 50\" {...props}>\n      <g strokeWidth=\"1\">\n        <g transform=\"translate(-125.000000, -145.000000)\" fillRule=\"nonzero\">\n          <g transform=\"translate(125.000000, 145.000000)\">\n            <path d=\"M22,0 L0,12.5 L0,37.5 L22,50 L44,37.5 L44,12.5 L22,0 Z M39.5159631,13.3449555 L22,23.2975006 L4.48403693,13.3449555 L22,3.3927918 L39.5159631,13.3449555 Z M2.98548176,15.8866883 L20.5072591,25.8419037 L20.5072591,45.7592011 L2.98548176,35.8036041 L2.98548176,15.8866883 Z M23.4927409,45.7592011 L23.4927409,25.8419037 L41.0145182,15.8866883 L41.0145182,35.8036041 L23.4927409,45.7592011 Z\" />\n          </g>\n        </g>\n      </g>\n    </svg>\n  );\n}\n\nexport default Block;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport {\n  Card,\n  Flex,\n  Col,\n  Row,\n  Spacer,\n  Text,\n  breakpoint,\n  EmptyState\n} from \"@urkellabs/ucl\";\nimport { useTranslation, Trans } from \"react-i18next\";\nimport { useHistory } from \"react-router-dom\";\n\n// Components\nimport Link from \"components/Link\";\n\n// SVGs\nimport BlockLogo from \"components/svg/Block\";\n\n// Util\nimport { truncateHash, timeAgo } from \"utils/util\";\n\nlet BlockIcon = styled(BlockLogo)`\n  height: 20px;\n  width: 20px;\n  margin-right: 5px;\n`;\n\nlet Time = styled(Flex)`\n  ${breakpoint.tablet} {\n    justify-content: flex-end;\n  }\n`;\n\nconst BlockCardItem = ({ block }) => {\n  return (\n    <Row>\n      <Spacer px={10} />\n      <Col mobile={12} tablet>\n        <Flex columns>\n          <Flex>\n            <BlockIcon />\n            <Text small>\n              <Trans i18nKey=\"home.block_num\" values={{ height: block.height }}>\n                <Link to={\"/block/\" + block.height}></Link>\n              </Trans>\n            </Text>\n          </Flex>\n          <Flex>\n            <Text small>\n              <Trans\n                i18nKey=\"home.mined_by\"\n                values={{ miner: truncateHash(block.miner) }}\n              >\n                <Link to={\"/address/\" + block.miner}>\n                  {/* @todo check pool */}\n                </Link>\n              </Trans>\n            </Text>\n          </Flex>\n          <Text small>\n            <Trans i18nKey=\"home.transactions\" values={{ tx_num: block.txs }} />\n          </Text>\n        </Flex>\n      </Col>\n      <Col mobile={12} tablet>\n        <Time>\n          <Text small bold>\n            {timeAgo(block.time)}\n          </Text>\n        </Time>\n      </Col>\n      <Spacer px={10} />\n    </Row>\n  );\n};\n\nexport default function RecentBlocks({ blocks }) {\n  const { t } = useTranslation();\n  let history = useHistory();\n\n  if (blocks.length === 0) {\n    return (\n      <Card title={t(\"home.recent_transactions\")}>\n        <EmptyState\n          header=\"No Blocks yet\"\n          icon={<BlockLogo />}\n          action={() => {\n            history.push(\"/status\");\n          }}\n          actionTitle=\"Check Node Status\"\n        />\n      </Card>\n    );\n  }\n  const blockRows = blocks.map((block, index) => (\n    <BlockCardItem key={index} block={block} />\n  ));\n  return (\n    <Card\n      title={t(\"home.recent_blocks\")}\n      headerAction={<Link to=\"/blocks\">See More</Link>}\n    >\n      {blockRows}\n    </Card>\n  );\n}\n","import React, { Suspense } from \"react\";\nimport styled from \"styled-components\";\nimport { useQuery } from \"@urkellabs/ucl\";\n\n//Components\nimport NetworkSummary from \"components/home/NetworkSummary\";\nimport RecentTransactions from \"components/home/RecentTransactions\";\nimport RecentBlocks from \"components/home/RecentBlocks\";\n\n//@todo\n//styled components\nexport const HorizontalContainer = styled.div`\n  padding: 12px;\n  width: 100%;\n`;\n\nexport const VerticalContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  @media (min-width: 768px) {\n    flex-direction: row;\n  }\n`;\n\nconst IndividualCardContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  padding: 12px;\n  @media (min-width: 1024px) {\n    padding: 24px 12px;\n  }\n`;\n\n//@todo skeleton.\nfunction HomeView() {\n  const { data: summary } = useQuery(\"/summary\");\n  const { data: blocks } = useQuery(\"/blocks\", { limit: 5 });\n  const { data: txs } = useQuery(\"/txs\", { limit: 5 });\n\n  //All of these below should just be containers. @todo\n  return (\n    <>\n      <HorizontalContainer>\n        <NetworkSummary info={summary} />\n      </HorizontalContainer>\n      <VerticalContainer>\n        <IndividualCardContainer>\n          <RecentTransactions txs={txs.result} />\n        </IndividualCardContainer>\n        <IndividualCardContainer>\n          <RecentBlocks blocks={blocks.result} />\n        </IndividualCardContainer>\n      </VerticalContainer>\n    </>\n  );\n}\n\nexport default function Home() {\n  return (\n    <>\n      <Suspense fallback={<div>...Loading</div>}>\n        <HomeView />\n      </Suspense>\n    </>\n  );\n}\n","import React from \"react\";\nimport { Row, Col, Card } from \"@urkellabs/ucl\";\nimport { useTranslation } from \"react-i18next\";\nimport Moment from \"react-moment\";\n\n// Components\nimport StackedData from \"components/shared/StackedData\";\n\nfunction timeToNextState(blocks) {\n  if (blocks) {\n    let today = new Date();\n    let timeLeft = new Date(\n      today.getTime() + (blocks / 144) * 24 * 3600 * 1000\n    );\n    return (\n      <>\n        <span>{blocks}</span> (~<Moment fromNow>{timeLeft}</Moment>)\n      </>\n    );\n  } else {\n    return \"-\";\n  }\n}\n\nexport default function NameSummary({ name }) {\n  const { t } = useTranslation();\n  return (\n    <Card title={t(\"name_detail.summary\")}>\n      <Row>\n        <Col mobile={12} tablet>\n          <StackedData label=\"name_detail.name\" value={name.name} />\n        </Col>\n        <Col mobile={12} tablet>\n          <StackedData label=\"name_detail.release_block\" value={name.release} />\n        </Col>\n        <Col mobile={12} tablet>\n          <StackedData\n            label=\"name_detail.reserved\"\n            value={name.reserved.toString()}\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col mobile={12} tablet>\n          <StackedData label=\"name_detail.state\" value={name.state} />\n        </Col>\n        <Col mobile={12} tablet>\n          <StackedData\n            label=\"name_detail.blocks_until_next\"\n            value={timeToNextState(name.blocksUntil)}\n          />\n        </Col>\n        <Col mobile={12} tablet>\n          <StackedData label=\"name_detail.next_state\" value={name.nextState} />\n        </Col>\n      </Row>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Row, Col, Card, Table } from \"@urkellabs/ucl\";\nimport { useTranslation } from \"react-i18next\";\n\n// Components\nimport StackedData from \"components/shared/StackedData\";\n\n// Util\nimport { hnsValues } from \"utils/util\";\n\nexport default function NameSummary({ name }) {\n  const { t } = useTranslation();\n  return (\n    <Card title={t(\"name_detail.advanced\")} collapse closed>\n      {/* @todo need auxilary labels -> bytes for size, scientific format for diff, etc */}\n      <Row>\n        <Col mobile={12} desktop>\n          <Table>\n            <Table.Body>\n              <Table.Tr>\n                <StackedData\n                  cell\n                  label=\"name_detail.name_hash\"\n                  value={name.hash}\n                />\n              </Table.Tr>\n              <Table.Tr>\n                <StackedData\n                  cell\n                  label=\"name_detail.height\"\n                  value={name.height}\n                />\n              </Table.Tr>\n              <Table.Tr>\n                <StackedData\n                  cell\n                  label=\"name_detail.renewal\"\n                  value={name.renewal}\n                />\n              </Table.Tr>\n              <Table.Tr>\n                <StackedData\n                  cell\n                  label=\"name_detail.value\"\n                  value={hnsValues(name.value)}\n                />\n              </Table.Tr>\n            </Table.Body>\n          </Table>\n        </Col>\n        <Col mobile={12} desktop>\n          <Table>\n            <Table.Body>\n              <Table.Tr>\n                <StackedData\n                  cell\n                  label=\"name_detail.highest\"\n                  value={hnsValues(name.highest)}\n                />\n              </Table.Tr>\n              <Table.Tr>\n                <StackedData\n                  cell\n                  label=\"name_detail.weak\"\n                  value={name.weak.toString()}\n                />\n              </Table.Tr>\n              <Table.Tr>\n                <StackedData\n                  cell\n                  label=\"name_detail.transfer\"\n                  value={name.transfer}\n                />\n              </Table.Tr>\n              <Table.Tr>\n                <StackedData\n                  cell\n                  label=\"name_detail.revoked\"\n                  value={name.revoked}\n                />\n              </Table.Tr>\n            </Table.Body>\n          </Table>\n        </Col>\n      </Row>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Pagination, Card, Table } from \"@urkellabs/ucl\";\nimport { useTranslation } from \"react-i18next\";\n\n// Components\nimport Link from \"components/Link\";\n\n// Util\nimport { hnsValues, timeAgo } from \"utils/util\";\n\nexport default function NameHistory({ history, page, changePage, pages, url }) {\n  const { t } = useTranslation();\n  const names = history.map((name, index) => (\n    <Table.Tr key={index}>\n      <Table.Td>{name.action}</Table.Td>\n      {/* @fixme Not working */}\n      <Table.Td>{timeAgo(name.time)}</Table.Td>\n      {/* @todo need to link this */}\n      <Table.Td>\n        <Link to={\"/block/\" + name.height}>{name.height}</Link>\n      </Table.Td>\n      <Table.Td>{hnsValues(name.value) || \"--\"}</Table.Td>\n    </Table.Tr>\n  ));\n  return (\n    <>\n      <Card title={t(\"name_detail.history\")} collapse>\n        {/* @todo remove all these class names. */}\n        {/* @todo need links in here */}\n        {/* @todo need auxilary labels -> bytes for size, scientific format for diff, etc */}\n        {names.length === 0 && <p>There is no history for this name</p>}\n        {names.length > 0 && (\n          <Table>\n            <Table.Head>\n              <Table.Tr>\n                <Table.Th>{t(\"name_detail.action\")}</Table.Th>\n                <Table.Th>{t(\"name_detail.time\")}</Table.Th>\n                <Table.Th>{t(\"name_detail.block_height\")}</Table.Th>\n                <Table.Th>{t(\"name_detail.value\")}</Table.Th>\n              </Table.Tr>\n            </Table.Head>\n            <Table.Body>{names}</Table.Body>\n          </Table>\n        )}\n      </Card>\n      <Pagination\n        totalPages={pages}\n        page={page}\n        url={url}\n        changePage={changePage}\n      />\n    </>\n  );\n}\n","import React from \"react\";\nimport { Flex, Header, Text, Container } from \"@urkellabs/ucl\";\n\nimport styled from \"styled-components\";\n\nconst Center = styled(Flex)`\n  flex: 1;\n  width: 100%;\n  padding: 50px;\n  margin-top: 50px;\n`;\n\nexport default class NameError extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // You can also log the error to an error reporting service\n    // Solitude?\n    // logErrorToMyService(error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return (\n        <Container>\n          <Center align=\"center\" justify=\"center\" columns>\n            <Header>{this.props.name} is an invalid name.</Header>\n            <Text>\n              As a quick reminder, the following are brief naming rules that\n              define valid Handshake names:\n            </Text>\n            <Flex align=\"flex-start\" justify=\"flex-start\">\n              <ul>\n                <li>\n                  The name must be at least 1 character but less than 64\n                  characters.\n                </li>\n                <li>\n                  The valid set of characters is between 0-9 and a-z as well as\n                  \"-\" and \"_\". Capitals are not allowed.\n                </li>\n                <li>Unicode characters are NOT allowed.</li>\n                <li>The name can not start or end with \"-\" or \"_\"</li>\n                <li>\n                  The name must not belong in the{\" \"}\n                  <a\n                    href=\"https://github.com/handshake-org/hsd/blob/master/lib/covenants/rules.js#L85-L91\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    blacklist\n                  </a>\n                </li>\n              </ul>\n            </Flex>\n          </Center>\n        </Container>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n","import React, { Suspense } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { usePage, useQuery, Spacer } from \"@urkellabs/ucl\";\n\n// Components\nimport NameSummary from \"components/name/NameSummary\";\nimport NameAdvanced from \"components/name/NameAdvanced\";\nimport NameHistory from \"components/name/NameHistory\";\n\n// Error Boundary\nimport NameError from \"screens/errors/NameError\";\n\n//@todo remove this.\n\nconst NameRecords = () => <div>todo</div>;\n\nfunction NameView({ name, page, changePage, url }) {\n  const { data: nameData } = useQuery(\"/names/\" + name);\n\n  //@todo move this to NameHistory component, since we want to be able to filter it effectively.\n  //@todo I don't think the previous version of this supported pagination.\n  //When we move this to a container, support pagination\n  const { data } = useQuery(\"/names/\" + name + \"/history\");\n  return (\n    <>\n      <NameSummary name={nameData} />\n      <Spacer />\n      <NameAdvanced name={nameData} />\n      {name.records && <NameRecords records={name.records} />}\n      <Spacer />\n      <NameHistory\n        history={data.result}\n        page={page}\n        pages={Math.ceil(data.total / 25)}\n        url={\"/name/\" + name}\n      />\n    </>\n  );\n}\n\nexport default function Name() {\n  const page = usePage();\n  const { name } = useParams();\n  return (\n    <NameError name={name}>\n      <Suspense fallback={<div>Loading...</div>}>\n        <NameView name={name} page={page} />\n      </Suspense>\n    </NameError>\n  );\n}\n","import React from \"react\";\nimport { Pagination, Card, Skeleton, Table } from \"@urkellabs/ucl\";\nimport { useTranslation } from \"react-i18next\";\n\n// Components\nimport Link from \"components/Link\";\n\nconst Row = ({ name, state, height, loading }) => (\n  <Table.Tr>\n    <Table.Td>\n      {loading ? <Skeleton /> : <Link to={\"/name/\" + name}>{name}</Link>}\n    </Table.Td>\n    <Table.Td>{loading ? <Skeleton /> : state}</Table.Td>\n    <Table.Td>\n      {loading ? <Skeleton /> : <Link to={\"/block/\" + height}>{height}</Link>}\n    </Table.Td>\n  </Table.Tr>\n);\n\nfunction NamesTableStructure({ children }) {\n  const { t } = useTranslation();\n  return (\n    <Card title=\"TLD Names\">\n      <Table>\n        <Table.Head>\n          <Table.Tr>\n            <Table.Th>{t(\"names.name\")}</Table.Th>\n            <Table.Th>{t(\"names.state\")}</Table.Th>\n            <Table.Th>{t(\"names.height\")}</Table.Th>\n          </Table.Tr>\n        </Table.Head>\n        <Table.Body>{children}</Table.Body>\n      </Table>\n    </Card>\n  );\n}\n\nexport function NamesSkeleton() {\n  const rows = [];\n  for (let i = 0; i < 24; i++) rows.push(<Row key={i} loading />);\n  return <NamesTableStructure>{rows}</NamesTableStructure>;\n}\n\nexport function NamesTable({ names, pages, page, changePage }) {\n  const nameRows = names.map((name, index) => (\n    <Row key={index} name={name.name} state={name.state} height={name.height} />\n  ));\n\n  // 25 blocks per page\n  return (\n    <>\n      <NamesTableStructure>{nameRows}</NamesTableStructure>\n      <Pagination\n        totalPages={pages}\n        page={page}\n        url=\"/names\"\n        changePage={changePage}\n      />\n    </>\n  );\n}\n","import React, { Suspense } from \"react\";\nimport { usePage, useQuery } from \"@urkellabs/ucl\";\n\n// Components\nimport { NamesSkeleton, NamesTable } from \"components/name/NamesTable\";\n\nfunction NamesView({ page }) {\n  const pageOffset = (page - 1) * 25;\n  const { data } = useQuery(\"/names\", { offset: pageOffset });\n  const pages = Math.ceil(data.total / 25);\n\n  return <NamesTable names={data.result} page={page} pages={pages} />;\n}\n\nexport default function Names() {\n  const page = usePage();\n\n  return (\n    <>\n      <Suspense fallback={<NamesSkeleton />}>\n        <NamesView page={page} />\n      </Suspense>\n    </>\n  );\n}\n","import React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { useTranslation } from \"react-i18next\";\n\n// Containers\nimport SearchBar from \"containers/SearchBar\";\n\nconst Header = styled.h1`\n  margin-top: 50px;\n  font-size: 24px;\n  font-weight: bold;\n  text-align: center;\n`;\n\nconst SearchResultsTable = styled.table`\n  margin: 25px auto 0;\n  font-size: 20px;\n`;\n\nconst SearchBarWrapper = styled.div`\n  margin-top: 50px;\n`;\n\nexport default function Search() {\n  const location = useLocation();\n  const { t } = useTranslation();\n\n  if (location.state.length === 0) {\n    return (\n      <>\n        <Header>{t(\"search.header\")}</Header>\n        <h2>{t(\"search.subheader\")}</h2>\n        <SearchBarWrapper>\n          <SearchBar />\n        </SearchBarWrapper>\n      </>\n    );\n  }\n\n  const results = location.state.map((result, index) => (\n    <tr key={index}>\n      <td>{result.type}:</td>\n      <td>\n        <Link to={result.url}>{result.url}</Link>\n      </td>\n    </tr>\n  ));\n\n  return (\n    <>\n      <Header>{t(\"search.multiple_results\")}</Header>\n      <SearchResultsTable className=\"table\">\n        <tbody>{results}</tbody>\n      </SearchResultsTable>\n    </>\n  );\n}\n","import { usePersistedState } from \"@urkellabs/ucl\";\n\nexport default function useNetwork() {\n  //Because we've changed these values, we need to unset the users old value.\n  //We should write a more complicated script here than normal, but for now I'm just going to automatically unset it and set the beta value.\n  //\n  //What we should do is check for any other value that is not one we currently support and then and only then reset it.\n  //\n  // localStorage.removeItem(\"networkURL\");\n  let [network, setNetwork] = usePersistedState(\"networkURL\", () => {\n    if (process.env.NODE_ENV !== \"production\") {\n      // return \"http://localhost:8080\";\n      return \"https://beta.urkellabs.com\";\n    } else {\n      // return \"https://api.hnscan.com\";\n      return \"https://beta.urkellabs.com\";\n    }\n  });\n\n  // return [network, setNetwork]; Hardcode....\n  return [\"https://beta.urkellabs.com\", setNetwork];\n}\n","import React from \"react\";\nimport { Select } from \"@urkellabs/ucl\";\n\n// Hooks\nimport useNetwork from \"hooks/useNetwork\";\n\nexport default function NetworkSwitcher(props) {\n  let [network, setNetwork] = useNetwork();\n\n  let options = [\n    {\n      value: \"http://localhost:8080\",\n      label: \"Local Testnet (http://localhost:8080)\"\n    },\n    {\n      value: \"https://experimental.hnscan.com\",\n      label: \"Experimental Testnet (https://experimental.hnscan.com)\"\n    },\n    {\n      value: \"https://api.hnscan.com\",\n      label: \"HNScan Mainnet (https://api.hnscan.com)\"\n    }\n  ];\n\n  return (\n    <Select\n      options={options}\n      defaultValue={\n        options.find(element => element.value === network) || options[0]\n      }\n      onChange={kv => {\n        setNetwork(kv.value);\n        window.location.reload();\n      }}\n    />\n  );\n}\n\n////@todo move this out.\n////@todo have this take settings from a config file?\n////@todo can I get dropdown to be a dropup?\n//@todo make a connection to the URL and show a check mark next to the Switcher if we have ensured that it connects.\n","import React from \"react\";\nimport {\n  Card,\n  Col,\n  Header,\n  LanguageSwitcher,\n  Row,\n  Text,\n  Container,\n  useLocalStorage\n} from \"@urkellabs/ucl\";\nimport { useTranslation } from \"react-i18next\";\nimport styled from \"styled-components\";\n\n// Components\nimport ThemeSwitcher from \"components/shared/ThemeSwitcher\";\nimport NetworkSwitcher from \"components/shared/NetworkSwitcher\";\n\nconst SmallText = styled(Text)`\n  font-size: 0.875rem;\n`;\n\nconst supportedOptions = [\n  { value: \"en\", label: \"English\" },\n  { value: \"zh\", label: \"Chinese (incomplete)\" }\n];\n\nfunction SettingsInput({ label, description, children }) {\n  return (\n    <Container>\n      <Row>\n        <Header small bold margin=\"12px 0 6px\">\n          {label}\n        </Header>\n      </Row>\n      <Row>\n        <Col>\n          <SmallText>{description}</SmallText>\n        </Col>\n        <Col>{children}</Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default function Settings() {\n  const { t, i18n } = useTranslation();\n  const [, setLang] = useLocalStorage(\"i18nextLng\", null, false);\n\n  return (\n    <Card title={t(\"settings.title\")}>\n      <SettingsInput\n        label={t(\"settings.language_title\")}\n        description={t(\"settings.language_desc\")}\n      >\n        <LanguageSwitcher\n          supportedOptions={supportedOptions}\n          updateLanguage={value =>\n            i18n.changeLanguage(value, () => setLang(value))\n          }\n        />\n      </SettingsInput>\n      {/* <SettingsInput */}\n      {/*   label={t(\"settings.theme_title\")} */}\n      {/*   description={t(\"settings.theme_desc\")} */}\n      {/* > */}\n      {/*   <ThemeSwitcher /> */}\n      {/* </SettingsInput> */}\n      <SettingsInput\n        label={t(\"settings.network_title\")}\n        description={t(\"settings.network_desc\")}\n      >\n        <NetworkSwitcher />\n      </SettingsInput>\n    </Card>\n  );\n}\n","import React, { Suspense } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport {\n  Row,\n  Col,\n  Card,\n  Table,\n  useQuery,\n  Code,\n  breakpoint,\n  Header,\n  Spacer\n} from \"@urkellabs/ucl\";\nimport { useTranslation } from \"react-i18next\";\n\n// Components\nimport StackedData from \"components/shared/StackedData\";\nimport { InputList, OutputList } from \"components/shared/PutsList\";\n\n// Util\nimport { timeAgo, hnsValues, sumTxOutputs } from \"utils/util\";\n\nconst Container = styled.div`\n  width: 100%;\n  padding: 10px 0;\n  display: flex;\n  flex-direction: column;\n  border-bottom: 2px solid var(--border-color);\n\n  &:first-child {\n    padding: 0;\n  }\n\n  &:last-child {\n    padding: 0;\n    border-bottom: 0;\n  }\n`;\n\nconst TxWrapper = styled.div`\n  width: 100%;\n  word-wrap: break-word;\n  margin-bottom: 16px;\n  padding: 10px;\n`;\n\nconst TxTitle = styled(Header)`\n  font-weight: 700;\n`;\n\nconst TxHash = styled(Code)`\n  background: transparent;\n  color: inherit;\n  font-size: 14px;\n  max-width: 400px;\n  padding: 0;\n  font-weight: 400;\n\n  ${breakpoint.tablet} {\n    max-width: initial;\n  }\n\n  * {\n    margin-left: 4px;\n  }\n`;\n\nfunction TxDetailScreen({ hash }) {\n  const { t } = useTranslation();\n  const { data: tx } = useQuery(\"/txs/\" + hash);\n\n  return (\n    <>\n      <TxWrapper>\n        <TxTitle small>Transaction</TxTitle>\n        <TxHash copy>{hash}</TxHash>\n      </TxWrapper>\n      <Card title={t(\"tx_detail.summary\")}>\n        <Row>\n          <Col mobile={12} tablet>\n            <StackedData label=\"tx_detail.received\" value={timeAgo(tx.time)} />\n          </Col>\n          <Col mobile={12} tablet>\n            <StackedData label=\"tx_detail.amount\" value={hnsValues(tx.value)} />\n          </Col>\n          <Col mobile={12} tablet>\n            <StackedData label=\"tx_detail.fee\" value={hnsValues(tx.fee)} />\n          </Col>\n          <Col mobile={12} tablet>\n            <StackedData\n              label=\"tx_detail.confirmation\"\n              value={tx.confirmations}\n            />\n          </Col>\n        </Row>\n      </Card>\n      <Spacer />\n      <Card title={t(\"tx_detail.advanced\")} collapse closed>\n        <Row>\n          <Col mobile={12} desktop>\n            <Table>\n              <Table.Body>\n                <Table.Tr>\n                  <StackedData cell label=\"tx_detail.hash\" value={tx.hash} />\n                </Table.Tr>\n                <Table.Tr>\n                  <StackedData\n                    cell\n                    label=\"tx_detail.height\"\n                    value={tx.height}\n                    link={\"/block/\" + tx.height}\n                  />\n                </Table.Tr>\n                <Table.Tr>\n                  <StackedData\n                    cell\n                    label=\"tx_detail.locktime\"\n                    value={tx.locktime}\n                  />\n                </Table.Tr>\n              </Table.Body>\n            </Table>\n          </Col>\n          <Col mobile={12} desktop>\n            <Table>\n              <Table.Body>\n                <Table.Tr>\n                  <StackedData cell label=\"tx_detail.txid\" value={tx.tx_id} />\n                </Table.Tr>\n                <Table.Tr>\n                  <StackedData\n                    cell\n                    label=\"tx_detail.version\"\n                    value={tx.version}\n                  />\n                </Table.Tr>\n                <Table.Tr>\n                  <StackedData cell label=\"tx_detail.index\" value={tx.index} />\n                </Table.Tr>\n              </Table.Body>\n            </Table>\n          </Col>\n        </Row>\n      </Card>\n      <Spacer />\n      <Card title={t(\"tx_detail.tx_activity\")} collapse>\n        <Container>\n          <Row>\n            <Col mobile={12} desktop>\n              <InputList inputs={tx.inputs} />\n            </Col>\n            <Col mobile={12} desktop>\n              <OutputList outputs={tx.outputs} />\n            </Col>\n          </Row>\n        </Container>\n      </Card>\n    </>\n  );\n}\n\nexport default function TxDetail() {\n  const { hash } = useParams();\n\n  return (\n    <>\n      <Suspense fallback={<div>...Loading</div>}>\n        <TxDetailScreen hash={hash} />\n      </Suspense>\n    </>\n  );\n}\n","import React, { Component } from \"react\";\nimport { Card } from \"@urkellabs/ucl\";\n\nexport default class AirdropClaimScreen extends Component {\n  // TODO: verify that these two functions work correctly\n  confirmClaim(e) {\n    e.preventDefault();\n    let confirmForm = document.getElementById(\"airdropConfirmForm\");\n    let proofstring = document.getElementById(\"proof\").value;\n    let successMessage = document.getElementById(\"successMessage\");\n    let svg = document.getElementById(\"svg\");\n\n    console.log(proofstring);\n\n    const xhr = new XMLHttpRequest();\n\n    var data = new FormData();\n    data.append(\"proof\", proofstring);\n\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState === 4 && xhr.status === 200) {\n        confirmForm.style.display = \"none\";\n        successMessage.style.display = \"block\";\n        svg.classList.add(\"active\");\n      } else if (xhr.readyState === 4 && xhr.status >= 400) {\n        // error.innerHTML = xhr.responseText;\n      }\n    };\n\n    xhr.open(\"POST\", \"/submitclaim?confirm=true\");\n    xhr.send(data);\n  }\n\n  submitClaim(e) {\n    e.preventDefault();\n    let submitForm = document.getElementById(\"airdropSubmitForm\");\n    let confirmForm = document.getElementById(\"airdropConfirmForm\");\n    let error = document.getElementById(\"airdropError\");\n    let addressInputControl = document.getElementById(\"airdropAddressControl\");\n\n    const xhr = new XMLHttpRequest();\n\n    let address = document.getElementById(\"airdropAddress\").value;\n\n    //Check for bad address values\n    if (address === \"\") {\n      error.innerHTML = \"Please enter an address\";\n      return;\n    }\n\n    //Build form data.\n    var data = new FormData();\n    data.append(\"addr\", address);\n\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState === 2 || xhr.readyState === 3) {\n        addressInputControl.classList.add(\"is-loading\");\n      } else if (xhr.readyState === 4 && xhr.status === 200) {\n        addressInputControl.classList.remove(\"is-loading\");\n        let data = JSON.parse(xhr.responseText);\n        let proofstring = data.proof;\n        //Hide Submit Form\n        submitForm.style.display = \"none\";\n        confirmForm.style.display = \"block\";\n        document.getElementById(\"proof\").value = proofstring;\n      } else if (xhr.readyState === 4 && xhr.status >= 400) {\n        addressInputControl.classList.remove(\"is-loading\");\n        error.innerHTML = xhr.responseText;\n      }\n    };\n    xhr.open(\"POST\", \"/submitclaim\");\n    xhr.send(data);\n  }\n\n  render() {\n    // TODO: This template needs refining\n    return (\n      <Card title=\"Claim Your Airdrop\">\n        <Card.HorizontalContainer>\n          <span className=\"column is-half\">\n            <span className=\"control\">\n              <label htmlFor=\"claim\" className=\"radio\">\n                <input readOnly type=\"radio\" name=\"claim\" checked />\n                Faucet\n              </label>\n              {/* br\n                label.radio\n                  input(name=\"claim\" type=\"radio\")\n                  | Github\n                br\n                label.radio\n                  input(name=\"claim\" type=\"radio\")\n                  | Web of Trust PGP\n                br\n                label.radio\n                  input(name=\"claim\" type=\"radio\")\n                  | Sponsor/Investor */}\n            </span>\n          </span>\n          <span className=\"column is-half\">\n            <span className=\"airdropClaimContainer\">\n              <h2 className=\"airdropTitle\">Claim your faucet HNS</h2>\n              <span className=\"airdropDescription\">\n                This will first generate your proof for the airdrop. You can\n                either submit that proof yourself, or submit through HNScan.\n                Once your proof has been submitted and mined, the HNS is\n                deposited into the address associated with the private key\n                provided to you in the faucet. We do not have access to your\n                HNS, we are simply processing the claim for you.\n              </span>\n              <p className=\"error\" id=\"airdropError\"></p>\n              <form onSubmit={this.submitClaim} id=\"airdropSubmitForm\">\n                <span className=\"control\" id=\"airdropAddressControl\"></span>\n                <input\n                  placeholder=\"Provided HNS Address\"\n                  className=\"input\"\n                  id=\"airdropAddress\"\n                />\n                <input\n                  value=\"Confirm Claim\"\n                  type=\"submit\"\n                  className=\"button is-rounded airdropButton\"\n                />\n              </form>\n              <form onSubmit={this.confirmClaim} id=\"airdropConfirmForm\">\n                <textarea className=\"textarea\" id=\"proof\" disabled />\n                <input\n                  value=\"Send Claim\"\n                  type=\"submit\"\n                  className=\"button is-rounded airdropButton\"\n                />\n              </form>\n              <span className=\"successMessage\" id=\"successMessage\">\n                <svg\n                  className=\"checkmark\"\n                  id=\"svg\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 52 52\"\n                  width=\"70\"\n                >\n                  <circle\n                    className=\"checkmarkCircle\"\n                    cx=\"26\"\n                    cy=\"26\"\n                    r=\"23\"\n                    fill=\"none\"\n                  />\n                  <path\n                    className=\"checkmarkCheck\"\n                    fill=\"none\"\n                    d=\"M14.1 27.2l7.1 7.2 16.7-16.8\"\n                  />\n                </svg>\n                <span>Your airdrop claim has been submitted!</span>\n              </span>\n            </span>\n          </span>\n        </Card.HorizontalContainer>\n      </Card>\n    );\n  }\n}\n","import React, { Suspense } from \"react\";\nimport styled from \"styled-components\";\nimport humanizeDuration from \"humanize-duration\";\nimport {\n  Card,\n  Table,\n  Modal,\n  Text,\n  Code,\n  HelpIcon,\n  useQuery\n} from \"@urkellabs/ucl\";\nimport { useTranslation } from \"react-i18next\";\n\n// Components\nimport StackedData from \"components/shared/StackedData\";\n\n// Hooks\nimport useRoutedModal from \"hooks/useRoutedModal\";\n\n// Util\nimport { sciNotation, formatLargeNumber } from \"utils/util\";\n\nconst Help = styled(HelpIcon)`\n  height: 20px;\n  width: 15px;\n  margin-left: 20px;\n  cursor: pointer;\n`;\n\n//@todo move this somewhere else?\nfunction ConnectHelp(props) {\n  return (\n    <Modal\n      show={props.showModal}\n      closeFunction={props.toggleModal}\n      title={\"Connecting to this node\"}\n    >\n      <p>\n        This node's IP is <Code copy>{props.ip}</Code> and identity key is:{\" \"}\n        <Code copy>{props.idkey}</Code>\n      </p>\n      <Text>\n        To add this node to your outbound connections, run the following:\n        <Code copy shell>\n          {`hsd-cli rpc addnode ${props.idkey}@${props.ip} add`}\n        </Code>\n        If you do not have hsd-cli installed, follow these{\" \"}\n        <a\n          href=\"https://handshake-org.github.io/guides/mac-install.html#hsd-installation-instructions\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          instructions\n        </a>\n        .\n      </Text>\n    </Modal>\n  );\n}\n\nconst NodeStatusContainer = () => {\n  let [showModal, toggleModal] = useRoutedModal(\"connect\");\n\n  const { data: status } = useQuery(\"/status\");\n  const { t } = useTranslation();\n  let [difficulty, exponent] = sciNotation(status.difficulty, 5);\n  let totalDownloaded = formatLargeNumber(status.totalBytesRecv, 2);\n  let totalUploaded = formatLargeNumber(status.totalBytesSent, 2);\n\n  return (\n    <>\n      <Card title={t(\"node_status.node_status\")}>\n        <Table>\n          <Table.Body>\n            <Table.Tr>\n              <StackedData\n                cell\n                label=\"node_status.host\"\n                value={\n                  <>\n                    {status.key}@{status.host}:{status.port}\n                    <Help circle onClick={toggleModal} />\n                  </>\n                }\n              />\n            </Table.Tr>\n            <Table.Tr>\n              <StackedData\n                cell\n                label=\"node_status.network\"\n                value={status.network}\n              />\n            </Table.Tr>\n            <Table.Tr>\n              <StackedData\n                cell\n                label=\"node_status.chain_progress\"\n                value={status.progress}\n              />\n            </Table.Tr>\n            <Table.Tr>\n              <StackedData\n                cell\n                label=\"node_status.version\"\n                value={`${status.version} (${status.agent})`}\n              />\n            </Table.Tr>\n            <Table.Tr>\n              <StackedData\n                cell\n                label=\"node_status.connections\"\n                value={status.connections}\n              />\n            </Table.Tr>\n            <Table.Tr>\n              <StackedData\n                cell\n                label=\"node_status.difficulty\"\n                value={\n                  <span>\n                    {difficulty} x 10<sup>{exponent}</sup>\n                  </span>\n                }\n              />\n            </Table.Tr>\n            <Table.Tr>\n              <StackedData\n                cell\n                label=\"node_status.uptime\"\n                value={humanizeDuration(status.uptime * 1000)}\n              />\n            </Table.Tr>\n            <Table.Tr>\n              <StackedData\n                cell\n                label=\"node_status.total_downloaded\"\n                value={\n                  totalDownloaded[0] + \" \" + totalDownloaded[1].name + \"bytes\"\n                }\n              />\n            </Table.Tr>\n            <Table.Tr>\n              <StackedData\n                cell\n                label=\"node_status.total_uploaded\"\n                value={totalUploaded[0] + \" \" + totalUploaded[1].name + \"bytes\"}\n              />\n            </Table.Tr>\n          </Table.Body>\n        </Table>\n      </Card>\n      <ConnectHelp\n        showModal={showModal}\n        toggleModal={toggleModal}\n        ip={`${status.host}:${status.port}`}\n        idkey={status.key}\n      />\n    </>\n  );\n};\n\n//Modal here should be it's own screen... Accessible via a Hash Router.\nexport default function NodeStatus() {\n  return (\n    <>\n      <Suspense fallback={<div>Loading...</div>}>\n        <NodeStatusContainer />\n      </Suspense>\n    </>\n  );\n}\n","import { useState } from \"react\";\nimport { useLocation, useHistory } from \"react-router-dom\";\n\nexport default function useRoutedModal(urlHash) {\n  const location = useLocation();\n  let history = useHistory();\n\n  let [showModal, setModal] = useState(() => {\n    if (location.hash === \"#\" + urlHash) {\n      return true;\n    }\n    return false;\n  });\n\n  const toggleModal = () =>\n    setModal(active => {\n      if (location.hash === \"#\" + urlHash) {\n        history.push(location.pathname);\n      } else {\n        history.push(location.pathname + \"#\" + urlHash);\n      }\n\n      return !active;\n    });\n\n  return [showModal, toggleModal];\n}\n","import React from \"react\";\nimport { useQuery } from \"@urkellabs/ucl\";\nimport { LineChart } from \"@urkellabs/uchl\";\n\nexport default function DailyTransactions() {\n  //@todo eventually we can make this configurable, but no need right now.\n  const { data } = useQuery(\"/charts/dailyTransactions\", {\n    startTime: Math.floor(Date.now() / 1000) - 1000 * 24 * 3600,\n    endTime: Math.floor(Date.now() / 1000)\n  });\n\n  return (\n    <LineChart\n      axisLabels={[\"\", \"Transactions\"]}\n      chartLabel=\"Daily Transactions\"\n      data={data}\n      dataLabels={[\"Daily Transactions\"]}\n    />\n  );\n}\n","import React from \"react\";\nimport { useQuery } from \"@urkellabs/ucl\";\nimport { LineChart } from \"@urkellabs/uchl\";\n\nexport default function DailyOpens() {\n  //@todo eventually we can make this configurable, but no need right now.\n  const { data } = useQuery(\"/charts/dailyOpens\", {\n    startTime: Math.floor(Date.now() / 1000) - 1000 * 24 * 3600,\n    endTime: Math.floor(Date.now() / 1000)\n  });\n\n  return (\n    <LineChart\n      axisLabels={[\"\", \"Auction Starts\"]}\n      chartLabel=\"Daily Auction Starts\"\n      data={data}\n      dataLabels={[\"Daily Auction Starts\"]}\n    />\n  );\n}\n","import React from \"react\";\nimport { useQuery } from \"@urkellabs/ucl\";\nimport { LineChart } from \"@urkellabs/uchl\";\n\nexport default function DailyBids() {\n  //@todo eventually we can make this configurable, but no need right now.\n  const { data } = useQuery(\"/charts/dailyBids\", {\n    startTime: Math.floor(Date.now() / 1000) - 1000 * 24 * 3600,\n    endTime: Math.floor(Date.now() / 1000)\n  });\n\n  return (\n    <LineChart\n      axisLabels={[\"\", \"Bids\"]}\n      chartLabel=\"Daily Bids\"\n      data={data}\n      dataLabels={[\"Daily Bids\"]}\n    />\n  );\n}\n","import React from \"react\";\nimport { useQuery } from \"@urkellabs/ucl\";\nimport { LineChart } from \"@urkellabs/uchl\";\n\nexport default function TotalSupply() {\n  //@todo eventually we can make this configurable, but no need right now.\n  const { data } = useQuery(\"/charts/supply\", {\n    startTime: Math.floor(Date.now() / 1000) - 1000 * 24 * 3600,\n    endTime: Math.floor(Date.now() / 1000)\n  });\n\n  return (\n    <LineChart\n      axisLabels={[\"\", \"HNS Tokens (in millions)\"]}\n      chartLabel=\"Total HNS Supply\"\n      data={data}\n      dataLabels={[\"Total HNS Supply\"]}\n      yFormatter={el => el / 1000000}\n    />\n  );\n}\n","import React from \"react\";\nimport { useQuery } from \"@urkellabs/ucl\";\nimport { LineChart } from \"@urkellabs/uchl\";\n\nexport default function TotalTransactions() {\n  //@todo eventually we can make this configurable, but no need right now.\n  const { data } = useQuery(\"/charts/dailyTotalTransactions\", {\n    startTime: Math.floor(Date.now() / 1000) - 1000 * 24 * 3600,\n    endTime: Math.floor(Date.now() / 1000)\n  });\n\n  return (\n    <LineChart\n      axisLabels={[\"\", \"Transactions (in thousands)\"]}\n      chartLabel=\"Total Transactions\"\n      data={data}\n      dataLabels={[\"Total Transactions\"]}\n      yFormatter={el => el / 1000}\n      // @note add me if transactions start getting out of hand\n      // yTooltipFormatter={el =>\n      //   `${sciNotation(el, 4)[0]} x 10^${sciNotation(el, 4)[1]}`\n      // }\n    />\n  );\n}\n","import React from \"react\";\nimport { useQuery } from \"@urkellabs/ucl\";\nimport { LineChart } from \"@urkellabs/uchl\";\n\nexport default function TotalBurned() {\n  //@todo eventually we can make this configurable, but no need right now.\n  const { data } = useQuery(\"/charts/burned\", {\n    startTime: Math.floor(Date.now() / 1000) - 1000 * 24 * 3600,\n    endTime: Math.floor(Date.now() / 1000)\n  });\n\n  return (\n    <LineChart\n      axisLabels={[\"\", \"HNS Tokens (in millions)\"]}\n      chartLabel=\"Total HNS Burned\"\n      data={data}\n      dataLabels={[\"Total HNS Burned\"]}\n      yFormatter={el => el / 1000000}\n    />\n  );\n}\n","import React from \"react\";\nimport { useQuery } from \"@urkellabs/ucl\";\nimport { LineChart } from \"@urkellabs/uchl\";\n\nexport default function TotalLocked() {\n  //@todo eventually we can make this configurable, but no need right now.\n  const { data } = useQuery(\"/charts/locked\", {\n    startTime: Math.floor(Date.now() / 1000) - 1000 * 24 * 3600,\n    endTime: Math.floor(Date.now() / 1000)\n  });\n\n  return (\n    <LineChart\n      axisLabels={[\"\", \"HNS Tokens (in millions)\"]}\n      chartLabel=\"Total HNS Locked\"\n      data={data}\n      dataLabels={[\"Total HNS Locked\"]}\n      yFormatter={el => el / 1000000}\n    />\n  );\n}\n","import React, { Suspense } from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { Card, Row, Col, Spacer } from \"@urkellabs/ucl\";\n\n// Containers\nimport DailyTransactions from \"containers/charts/DailyTransactions\";\nimport DailyOpens from \"containers/charts/DailyOpens\";\nimport DailyBids from \"containers/charts/DailyBids\";\nimport TotalSupply from \"containers/charts/TotalSupply\";\nimport TotalTransactions from \"containers/charts/TotalTransactions\";\nimport TotalBurned from \"containers/charts/TotalBurned\";\nimport TotalLocked from \"containers/charts/TotalLocked\";\n\nconst ChartsWrapper = styled.div`\n  width: 100%;\n  margin-top: 20px;\n`;\n\nconst CustomCol = styled(Col)`\n  height: 250px;\n  /* margin-top: 48px; */\n  padding-right: 1.5rem;\n  padding-left: 1.5rem;\n  position: relative;\n\n  * {\n    width: 100%;\n  }\n\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\n// This container will block any interactions on the immediate graph below it,\n// ensuring that we don't get tooltips from these graphs\n// @smell, there's probably a better way to do this...\nconst InteractonBlocker = styled.div`\n  cursor: pointer;\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  z-index: 100;\n`;\n\n//@todo would be cool to link \"source\" like Etherscan does, but link it to our API docs when we have them.\n//@todo right now we default to difficulty for the \"url\"/charts -> I think we can in the future make this a lander for charts, rather than just default to difficulty similar to etherscan. Allow people to pick it out..\n\nexport default function Charts() {\n  return (\n    <>\n      <ChartsWrapper>\n        <Suspense fallback={<div>Loading...</div>}>\n          <Card title=\"Market Data\">\n            <Row>\n              <CustomCol mobile={12} desktop={4}>\n                <InteractonBlocker as={Link} to=\"/charts/supply\" />\n                <TotalSupply />\n              </CustomCol>\n              <CustomCol mobile={12} desktop={4}>\n                <InteractonBlocker as={Link} to=\"/charts/burned\" />\n                <TotalBurned />\n              </CustomCol>\n              <CustomCol mobile={12} desktop={4}>\n                <InteractonBlocker as={Link} to=\"/charts/locked\" />\n                <TotalLocked />\n              </CustomCol>\n            </Row>\n          </Card>\n          <Spacer />\n          <Card title=\"Auction Data\">\n            <Row>\n              <CustomCol mobile={12} desktop={4}>\n                <InteractonBlocker as={Link} to=\"/charts/dailyopens\" />\n                <DailyOpens />\n              </CustomCol>\n              <CustomCol mobile={12} desktop={4}>\n                <InteractonBlocker as={Link} to=\"/charts/dailybids\" />\n                <DailyBids />\n              </CustomCol>\n            </Row>\n          </Card>\n          <Spacer />\n          <Card title=\"Chain Data\">\n            <Row>\n              <CustomCol mobile={12} desktop={4}>\n                <InteractonBlocker as={Link} to=\"/charts/dailytransactions\" />\n                <DailyTransactions />\n              </CustomCol>\n              <CustomCol mobile={12} desktop={4}>\n                <InteractonBlocker as={Link} to=\"/charts/totaltransactions\" />\n                <TotalTransactions />\n              </CustomCol>\n            </Row>\n          </Card>\n        </Suspense>\n      </ChartsWrapper>\n    </>\n  );\n}\n","import React from \"react\";\nimport { useQuery } from \"@urkellabs/ucl\";\nimport { LineChart } from \"@urkellabs/uchl\";\n\nexport default function DailyDifficulty() {\n  //@todo eventually we can make this configurable, but no need right now.\n  const { data } = useQuery(\"/charts/difficulty\", {\n    startTime: Math.floor(Date.now() / 1000) - 1000 * 24 * 3600,\n    endTime: Math.floor(Date.now() / 1000)\n  });\n\n  return (\n    <LineChart\n      axisLabels={[\"\", \"Difficulty (in millions)\"]}\n      chartLabel=\"Daily Average Difficulty\"\n      data={data}\n      dataLabels={[\"Daily Average Difficulty\"]}\n      yFormatter={el => el / 1000000}\n    />\n  );\n}\n","import React, { Suspense } from \"react\";\nimport styled from \"styled-components\";\nimport { Card } from \"@urkellabs/ucl\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n\n// Containers\nimport DailyDifficulty from \"containers/charts/DailyDifficulty\";\nimport DailyOpens from \"containers/charts/DailyOpens\";\nimport DailyBids from \"containers/charts/DailyBids\";\nimport DailyTransactions from \"containers/charts/DailyTransactions\";\nimport TotalSupply from \"containers/charts/TotalSupply\";\nimport TotalTransactions from \"containers/charts/TotalTransactions\";\nimport TotalBurned from \"containers/charts/TotalBurned\";\nimport TotalLocked from \"containers/charts/TotalLocked\";\n\nconst ChartsWrapper = styled.div`\n  width: 100%;\n  margin-top: 20px;\n`;\n\nconst CustomCard = styled(Card)`\n  height: 500px;\n`;\n\nconst PoweredBy = styled.div`\n  text-align: right;\n  padding-bottom: 24px;\n  opacity: 0.6;\n`;\n\nconst Graph = styled.div`\n  height: 95%;\n`;\n\n//@todo move this to tools\n//@todo remove the time on the date, just show the actual date.\n\nexport default function Charts() {\n  return (\n    <>\n      <ChartsWrapper>\n        <Suspense fallback={<div>Loading...</div>}>\n          <CustomCard fullHeight>\n            <Graph>\n              <Switch>\n                {/* Supply Data */}\n                <Route exact path=\"/charts/supply\" component={TotalSupply} />\n                <Route exact path=\"/charts/burned\" component={TotalBurned} />\n                <Route exact path=\"/charts/locked\" component={TotalLocked} />\n                {/* Auction Data */}\n                <Route exact path=\"/charts/dailyopens\" component={DailyOpens} />\n                <Route exact path=\"/charts/dailybids\" component={DailyBids} />\n                {/* Chain Data */}\n                <Route\n                  exact\n                  path=\"/charts/totaltransactions\"\n                  component={TotalTransactions}\n                />\n                <Route\n                  exact\n                  path=\"/charts/dailytransactions\"\n                  component={DailyTransactions}\n                />\n                <Route\n                  exact\n                  path=\"/charts/difficulty\"\n                  component={DailyDifficulty}\n                />\n                <Redirect to=\"/charts/difficulty\" />\n              </Switch>\n            </Graph>\n            <PoweredBy>Powered By HNScan API</PoweredBy>\n          </CustomCard>\n        </Suspense>\n      </ChartsWrapper>\n    </>\n  );\n}\n","import React from \"react\";\n//@todo split each change into Frontend Changes and Plugin changes.\n//so 1.0\n//Frontend:\n//-\n//-\n//-\n//Hnscan Plugin:\n//-\n//-\n//-\nexport default function Changelog() {\n  return (\n    <aside className=\"menu\">\n      <p className=\"menu-label\">General</p>\n      <ul className=\"menu-list\">\n        <li>\n          <a href=\"/\">Dashboard</a>\n        </li>\n        <li>\n          <a href=\"/\">Customers</a>\n        </li>\n      </ul>\n      <p className=\"menu-label\">Administration</p>\n      <ul className=\"menu-list\">\n        <li>\n          <a href=\"/\">Team Settings</a>\n        </li>\n        <li>\n          <a href=\"/\" className=\"is-active\">Manage Your Team</a>\n          <ul>\n            <li>\n              <a href=\"/\">Members</a>\n            </li>\n            <li>\n              <a href=\"/\">Plugins</a>\n            </li>\n            <li>\n              <a href=\"/\">Add a member</a>\n            </li>\n          </ul>\n        </li>\n        <li>\n          <a href=\"/\">Invitations</a>\n        </li>\n        <li>\n          <a href=\"/\">Cloud Storage Environment Settings</a>\n        </li>\n        <li>\n          <a href=\"/\">Authentication</a>\n        </li>\n      </ul>\n      <p className=\"menu-label\">Transactions</p>\n      <ul className=\"menu-list\">\n        <li>\n          <a href=\"/\">Payments</a>\n        </li>\n        <li>\n          <a href=\"/\">Transfers</a>\n        </li>\n        <li>\n          <a href=\"/\">Balance</a>\n        </li>\n      </ul>\n    </aside>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useTranslation } from \"react-i18next\";\n\n//SVGs\nimport Logo from \"components/svg/Block\";\n\nconst Wrapper = styled.div`\n  width: 80%;\n  margin: 50px auto 60px auto;\n  border-radius: 10px;\n  display: flex;\n  min-height: 500px;\n  text-align: center;\n  flex-direction: column;\n  align-items: center;\n\n  @media (max-width: $tablet) {\n    width: 95%;\n  }\n`;\n\nconst Header = styled.h1`\n  font-size: 64px;\n  font-weight: 700;\n`;\n\nconst Subtext = styled.div`\n  font-size: 12px;\n`;\n\nconst Container404 = styled.div`\n  display: flex;\n  font-size: 108px;\n`;\n\nconst HugeBlock = styled.div`\n  width: 80px;\n  height: auto;\n  opacity: 0.7;\n  margin-right: 4px;\n`;\n\nexport default function NotFoundScreen() {\n  const { t } = useTranslation();\n  return (\n    <Wrapper>\n      <Header>\n        <span>{t(\"not_found.oh_no\")}</span>\n      </Header>\n      <Subtext>\n        {/* @todo: could probably combine these translations */}\n        {t(\"not_found.void_message\")}\n        <a href=\"/\" rel=\"noopener noreferrer\">\n          {t(\"not_found.safety\")}\n        </a>\n      </Subtext>\n      <Container404>\n        <span>4</span>\n        <HugeBlock>\n          <Logo />\n        </HugeBlock>\n        <span>4</span>\n      </Container404>\n    </Wrapper>\n  );\n}\n","import React from \"react\";\nimport { Flex, Header, Text, Container } from \"@urkellabs/ucl\";\n\nimport styled from \"styled-components\";\n\n// Components\nimport NetworkSwitcher from \"components/shared/NetworkSwitcher\";\n\nconst Center = styled(Flex)`\n  height: 100vh;\n  width: 100%;\n  padding: 50px;\n`;\n\nconst NetworkSwitcherWrapper = styled.div`\n  width: 100%;\n  max-width: 500px;\n  margin-top: 20px;\n  margin-bottom: 20px;\n`;\n\nexport default class NetworkBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // You can also log the error to an error reporting service\n    // Solitude?\n    // logErrorToMyService(error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return (\n        <Container>\n          <Center align=\"center\" justify=\"center\" columns>\n            <Header>\n              Looks your connection to a node is offline. Want to try a\n              different network?\n            </Header>\n            <Text>Select a new network, and refresh your browser</Text>\n            <NetworkSwitcherWrapper>\n              <NetworkSwitcher />\n            </NetworkSwitcherWrapper>\n            <Text>\n              If you are trying to run HNScan locally, follow the node setup\n              instructions here:{\" \"}\n              <a href=\"https://github.com/HandshakeAlliance/HNScan\">\n                HNScan Github\n              </a>\n            </Text>\n          </Center>\n        </Container>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\n//@todo when switching networks, show if the connection worked. Then navigate the user back to the home page.\n//@todo maybe link to a local document page on HNScan for the node setup.\n","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\n// @todo eventually do this ourselves\n// LanguageDetector needs more testing - currently will auto set a local storage key\n// as well as dig into the browser's settings. See more here\n// https://github.com/i18next/i18next-browser-languageDetector\n\n// Languages\nimport en from \"./en/en.json\";\nimport zh from \"./zh/zh.json\";\n\n// the translations\nconst resources = {\n  en: en,\n  zh: zh\n};\n\ni18n\n  .use(LanguageDetector)\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .init({\n    debug: true,\n    fallbackLng: \"en\",\n    resources,\n    interpolation: {\n      escapeValue: false // react already safe from xss\n    }\n  });\n\nexport default i18n;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { GlobalStyles, useTheme, ApiConfig } from \"@urkellabs/ucl\";\n\n// Special\nimport ScrollToTop from \"components/shared/ScrollToTop\";\n\n// Components\nimport Navigation from \"components/layout/Navigation\";\nimport Footer from \"components/layout/Footer\";\nimport ContentContainer from \"components/layout/ContentContainer\";\n\n// Main Pages\nimport Address from \"screens/Address\";\nimport Block from \"screens/Block\";\nimport Blocks from \"screens/Blocks\";\nimport Home from \"screens/Home\";\nimport Name from \"screens/Name\";\nimport Names from \"screens/Names\";\nimport Search from \"screens/Search\";\nimport Settings from \"screens/Settings\";\nimport Transaction from \"screens/Transaction\";\n\n// More Pages\nimport AirdropClaimScreen from \"screens/tools/AirdropClaim/AirdropClaimScreen\";\n\n// Tool Pages\nimport NodeStatus from \"screens/tools/NodeStatus\";\n// import Peers from \"screens/tools/Peers\";\nimport Charts from \"screens/tools/Charts\";\nimport ChartDetail from \"screens/tools/ChartDetail\";\nimport Changelog from \"screens/Changelog\";\n\n// Error Pages\nimport NotFoundScreen from \"screens/errors/NotFound\";\nimport NetworkBoundary from \"screens/errors/NetworkBoundary\";\n\n// Internationalization\nimport \"../i18n/i18n\";\n\n// Hooks\nimport useNetwork from \"hooks/useNetwork\";\n\nfunction App() {\n  useTheme(true);\n  const [network] = useNetwork();\n  return (\n    <React.StrictMode>\n      <ApiConfig config={{ url: network }}>\n        <>\n          <GlobalStyles />\n          <Router>\n            <ScrollToTop />\n            <NetworkBoundary>\n              <Navigation />\n              <ContentContainer>\n                <Switch>\n                  <Route path=\"/\" exact component={Home} />\n                  <Route path=\"/address/:hash\" exact component={Address} />\n                  <Route path=\"/blocks\" exact component={Blocks} />\n                  <Route path=\"/block/:height\" exact component={Block} />\n                  <Route path=\"/names\" exact component={Names} />\n                  <Route path=\"/name/:name\" exact component={Name} />\n                  <Route path=\"/settings\" exact component={Settings} />\n                  {/* Ideally let's get a recent transactions page going */}\n                  <Route path=\"/tx/:hash\" exact component={Transaction} />\n                  <Route path=\"/search\" exact component={Search} />\n                  {/* More Screens */}\n                  {/* Tool Screens */}\n                  {/* <Route path=\"/peers\" exact component={Peers} /> */}\n                  <Route path=\"/status\" exact component={NodeStatus} />\n                  <Route path=\"/charts\" exact component={Charts} />\n                  <Route path=\"/charts/:name\" component={ChartDetail} />\n                  <Route path=\"/changelog\" exact component={Changelog} />\n                  <Route\n                    path=\"/airdropclaim\"\n                    exact\n                    component={AirdropClaimScreen}\n                  />\n                  <Route path=\"*\" component={NotFoundScreen} />\n                </Switch>\n              </ContentContainer>\n              <Footer />\n            </NetworkBoundary>\n          </Router>\n        </>\n      </ApiConfig>\n    </React.StrictMode>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}